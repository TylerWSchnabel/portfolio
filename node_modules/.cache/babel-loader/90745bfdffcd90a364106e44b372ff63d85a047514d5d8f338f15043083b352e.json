{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description Class to Controls the volume of an audio or video file.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nvar VolumeAction = /*#__PURE__*/function (_Action) {\n  _inherits(VolumeAction, _Action);\n  var _super = _createSuper(VolumeAction);\n  function VolumeAction(volumeValue) {\n    var _this;\n    _classCallCheck(this, VolumeAction);\n    _this = _super.call(this);\n    var volumeValueModel = {\n      mode: 'mute'\n    };\n    if (volumeValue !== 'mute') {\n      volumeValueModel = {\n        mode: \"\".concat(volumeValue).endsWith('db') ? 'decibels' : 'percent',\n        value: +\"\".concat(volumeValue).replace('db', '')\n      };\n    }\n    _this._actionModel = {\n      actionType: 'volume',\n      volumeValue: volumeValueModel\n    };\n    var qualifierValue = new QualifierValue(['volume', volumeValue]).setDelimiter(':');\n    _this.addQualifier(new Qualifier('e', qualifierValue));\n    return _this;\n  }\n  _createClass(VolumeAction, null, [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var volumeValue = actionModel.volumeValue;\n      var mode = volumeValue.mode;\n      var value = mode === 'mute' ? mode : volumeValue.value;\n      var suffix = mode === 'mute' || mode === \"percent\" ? '' : 'db';\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      return new this(\"\".concat(value).concat(suffix));\n    }\n  }]);\n  return VolumeAction;\n}(Action);\nexport default VolumeAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","VolumeAction","volumeValue","volumeValueModel","mode","endsWith","value","replace","_actionModel","actionType","qualifierValue","setDelimiter","addQualifier","actionModel","suffix"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/videoEdit/VolumeAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description Class to Controls the volume of an audio or video file.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nclass VolumeAction extends Action {\n    constructor(volumeValue) {\n        super();\n        let volumeValueModel = { mode: 'mute' };\n        if (volumeValue !== 'mute') {\n            volumeValueModel = {\n                mode: (`${volumeValue}`.endsWith('db') ? 'decibels' : 'percent'),\n                value: +(`${volumeValue}`.replace('db', ''))\n            };\n        }\n        this._actionModel = {\n            actionType: 'volume',\n            volumeValue: volumeValueModel\n        };\n        const qualifierValue = new QualifierValue(['volume', volumeValue]).setDelimiter(':');\n        this.addQualifier(new Qualifier('e', qualifierValue));\n    }\n    static fromJson(actionModel) {\n        const { volumeValue } = actionModel;\n        const { mode } = volumeValue;\n        const value = mode === 'mute' ? mode : volumeValue.value;\n        const suffix = (mode === 'mute' || mode === \"percent\") ? '' : 'db';\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        return new this(`${value}${suffix}`);\n    }\n}\nexport default VolumeAction;\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,YAAY;EAAA;EAAA;EACd,sBAAYC,WAAW,EAAE;IAAA;IAAA;IACrB;IACA,IAAIC,gBAAgB,GAAG;MAAEC,IAAI,EAAE;IAAO,CAAC;IACvC,IAAIF,WAAW,KAAK,MAAM,EAAE;MACxBC,gBAAgB,GAAG;QACfC,IAAI,EAAG,UAAGF,WAAW,EAAGG,QAAQ,CAAC,IAAI,CAAC,GAAG,UAAU,GAAG,SAAU;QAChEC,KAAK,EAAE,CAAE,UAAGJ,WAAW,EAAGK,OAAO,CAAC,IAAI,EAAE,EAAE;MAC9C,CAAC;IACL;IACA,MAAKC,YAAY,GAAG;MAChBC,UAAU,EAAE,QAAQ;MACpBP,WAAW,EAAEC;IACjB,CAAC;IACD,IAAMO,cAAc,GAAG,IAAIV,cAAc,CAAC,CAAC,QAAQ,EAAEE,WAAW,CAAC,CAAC,CAACS,YAAY,CAAC,GAAG,CAAC;IACpF,MAAKC,YAAY,CAAC,IAAIb,SAAS,CAAC,GAAG,EAAEW,cAAc,CAAC,CAAC;IAAC;EAC1D;EAAC;IAAA;IAAA,OACD,kBAAgBG,WAAW,EAAE;MACzB,IAAQX,WAAW,GAAKW,WAAW,CAA3BX,WAAW;MACnB,IAAQE,IAAI,GAAKF,WAAW,CAApBE,IAAI;MACZ,IAAME,KAAK,GAAGF,IAAI,KAAK,MAAM,GAAGA,IAAI,GAAGF,WAAW,CAACI,KAAK;MACxD,IAAMQ,MAAM,GAAIV,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,SAAS,GAAI,EAAE,GAAG,IAAI;MAClE;MACA;MACA,OAAO,IAAI,IAAI,WAAIE,KAAK,SAAGQ,MAAM,EAAG;IACxC;EAAC;EAAA;AAAA,EAzBsBhB,MAAM;AA2BjC,eAAeG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}