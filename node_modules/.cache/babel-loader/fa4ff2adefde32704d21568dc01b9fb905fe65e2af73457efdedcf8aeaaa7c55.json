{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { normal as normalFontWeight } from \"./fontWeight.js\";\nimport { normal as normalFontStyle } from \"./fontStyle.js\";\nimport { normal as normalTextDecoration } from \"./textDecoration.js\";\nimport { serializeCloudinaryCharacters } from \"../internal/utils/serializeCloudinaryCharacters.js\";\nimport { QualifierModel } from \"../internal/models/QualifierModel.js\";\nimport { solid } from \"./textStroke.js\";\nimport { isISolidStrokeModel } from \"../internal/models/IStrokeModel.js\";\n/**\n * @summary qualifier\n * @description Specifies how to style your layered text, controls the font, font size, line spacing and more.\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/layers#text_layer_options|Adding text overlays to images}\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/video_layers#text_layer_options|Adding text overlays to videos}\n * @see {@link Actions.Overlay| The overlay action}\n * @see {@link Actions.Underlay| The underlay action}\n * @memberOf Qualifiers\n */\nvar TextStyle = /*#__PURE__*/function (_QualifierModel) {\n  _inherits(TextStyle, _QualifierModel);\n  var _super = _createSuper(TextStyle);\n  /**\n   * @param {string} fontFamily The font family\n   * @param {number | string} fontSize The font size\n   */\n  function TextStyle(fontFamily, fontSize) {\n    var _this;\n    _classCallCheck(this, TextStyle);\n    _this = _super.call(this);\n    if (!fontFamily || !fontSize) {\n      throw \"You must provide a fontFamily and fontSize to a TextStyle\";\n    }\n    _this._qualifierModel.fontFamily = fontFamily;\n    _this._qualifierModel.fontSize = fontSize;\n    return _this;\n  }\n  /**\n   * @param {number} spacing The spacing between multiple lines in pixels.\n   */\n  _createClass(TextStyle, [{\n    key: \"lineSpacing\",\n    value: function lineSpacing(spacing) {\n      this._qualifierModel.lineSpacing = spacing;\n      return this;\n    }\n    /**\n     * @param spacing The spacing between the letters, in pixels.\n     */\n  }, {\n    key: \"letterSpacing\",\n    value: function letterSpacing(spacing) {\n      this._qualifierModel.letterSpacing = spacing;\n      return this;\n    }\n    /**\n     * The antialias setting to apply to the text. When this parameter is not specified, the default antialiasing for the subsystem and target device are applied.\n     * @param {FontAntialiasType|string} antiAlias\n     */\n  }, {\n    key: \"fontAntialias\",\n    value: function fontAntialias(antiAlias) {\n      this._qualifierModel.fontAntialias = antiAlias;\n      return this;\n    }\n    /**\n     * The name of any universally available font or a custom font, specified as the public ID of a raw, authenticated font in your account.\n     * For details on custom fonts, see {@link https://cloudinary.com/documentation/layers#custom_fonts|Using custom fonts for text overlays}.\n     * @param {string} fontFamilyName\n     */\n  }, {\n    key: \"fontFamily\",\n    value: function fontFamily(fontFamilyName) {\n      this._qualifierModel.fontFamily = fontFamilyName;\n      return this;\n    }\n    /**\n     * @param {number} fontSize The font size\n     */\n  }, {\n    key: \"fontSize\",\n    value: function fontSize(_fontSize) {\n      this._qualifierModel.fontSize = _fontSize;\n      return this;\n    }\n    /**\n     * @param {FontWeightType|string} fontWeight The font weight\n     */\n  }, {\n    key: \"fontWeight\",\n    value: function fontWeight(_fontWeight) {\n      this._qualifierModel.fontWeight = _fontWeight;\n      return this;\n    }\n    /**\n     *\n     * @param {string} fontStyle The font style.\n     */\n  }, {\n    key: \"fontStyle\",\n    value: function fontStyle(_fontStyle) {\n      this._qualifierModel.fontStyle = _fontStyle;\n      return this;\n    }\n    /**\n     * @param {string} fontHinting The outline hinting style to apply to the text. When this parameter is not specified, the default hint style for the font and target device are applied.\n     */\n  }, {\n    key: \"fontHinting\",\n    value: function fontHinting(_fontHinting) {\n      this._qualifierModel.fontHinting = _fontHinting;\n      return this;\n    }\n    /**\n     *\n     * @param {TextDecorationType|string} textDecoration The font decoration type.\n     */\n  }, {\n    key: \"textDecoration\",\n    value: function textDecoration(_textDecoration) {\n      this._qualifierModel.textDecoration = _textDecoration;\n      return this;\n    }\n    /**\n     * @param {TextAlignmentType|string} textAlignment The text alignment\n     */\n  }, {\n    key: \"textAlignment\",\n    value: function textAlignment(_textAlignment) {\n      this._qualifierModel.textAlignment = _textAlignment;\n      return this;\n    }\n    /**\n     * @description Whether to include an outline stroke. Set the color and weight of the stroke\n     */\n  }, {\n    key: \"stroke\",\n    value: function stroke(textStroke) {\n      if (textStroke) {\n        var strokeStyle = textStroke.split('_');\n        this._qualifierModel.stroke = {\n          width: +strokeStyle[1].replace('px', ''),\n          color: strokeStyle[strokeStyle.length - 1]\n        };\n      } else {\n        this._qualifierModel.stroke = true;\n      }\n      return this;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var stroke = this._qualifierModel.stroke;\n      var strokeStr = '';\n      if (stroke) {\n        strokeStr = isISolidStrokeModel(stroke) ? \"stroke_\".concat(solid(stroke.width, stroke.color)) : 'stroke';\n      }\n      return [\"\".concat(serializeCloudinaryCharacters(this._qualifierModel.fontFamily), \"_\").concat(this._qualifierModel.fontSize), this._qualifierModel.fontWeight !== normalFontWeight() && this._qualifierModel.fontWeight, this._qualifierModel.fontStyle !== normalFontStyle() && this._qualifierModel.fontStyle, this._qualifierModel.textDecoration !== normalTextDecoration() && this._qualifierModel.textDecoration, this._qualifierModel.textAlignment, strokeStr, this._qualifierModel.letterSpacing && \"letter_spacing_\".concat(this._qualifierModel.letterSpacing), this._qualifierModel.lineSpacing && \"line_spacing_\".concat(this._qualifierModel.lineSpacing), this._qualifierModel.fontAntialias && \"antialias_\".concat(this._qualifierModel.fontAntialias), this._qualifierModel.fontHinting && \"hinting_\".concat(this._qualifierModel.fontHinting)].filter(function (a) {\n        return a;\n      }).join('_');\n    }\n  }]);\n  return TextStyle;\n}(QualifierModel);\nexport { TextStyle };","map":{"version":3,"names":["normal","normalFontWeight","normalFontStyle","normalTextDecoration","serializeCloudinaryCharacters","QualifierModel","solid","isISolidStrokeModel","TextStyle","fontFamily","fontSize","_qualifierModel","spacing","lineSpacing","letterSpacing","antiAlias","fontAntialias","fontFamilyName","fontWeight","fontStyle","fontHinting","textDecoration","textAlignment","textStroke","strokeStyle","split","stroke","width","replace","color","length","strokeStr","filter","a","join"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/textStyle.js"],"sourcesContent":["import { normal as normalFontWeight } from \"./fontWeight.js\";\nimport { normal as normalFontStyle } from \"./fontStyle.js\";\nimport { normal as normalTextDecoration } from \"./textDecoration.js\";\nimport { serializeCloudinaryCharacters } from \"../internal/utils/serializeCloudinaryCharacters.js\";\nimport { QualifierModel } from \"../internal/models/QualifierModel.js\";\nimport { solid } from \"./textStroke.js\";\nimport { isISolidStrokeModel } from \"../internal/models/IStrokeModel.js\";\n/**\n * @summary qualifier\n * @description Specifies how to style your layered text, controls the font, font size, line spacing and more.\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/layers#text_layer_options|Adding text overlays to images}\n * </br><b>Learn more</b>: {@link https://cloudinary.com/documentation/video_layers#text_layer_options|Adding text overlays to videos}\n * @see {@link Actions.Overlay| The overlay action}\n * @see {@link Actions.Underlay| The underlay action}\n * @memberOf Qualifiers\n */\nclass TextStyle extends QualifierModel {\n    /**\n     * @param {string} fontFamily The font family\n     * @param {number | string} fontSize The font size\n     */\n    constructor(fontFamily, fontSize) {\n        super();\n        if (!fontFamily || !fontSize) {\n            throw `You must provide a fontFamily and fontSize to a TextStyle`;\n        }\n        this._qualifierModel.fontFamily = fontFamily;\n        this._qualifierModel.fontSize = fontSize;\n    }\n    /**\n     * @param {number} spacing The spacing between multiple lines in pixels.\n     */\n    lineSpacing(spacing) {\n        this._qualifierModel.lineSpacing = spacing;\n        return this;\n    }\n    /**\n     * @param spacing The spacing between the letters, in pixels.\n     */\n    letterSpacing(spacing) {\n        this._qualifierModel.letterSpacing = spacing;\n        return this;\n    }\n    /**\n     * The antialias setting to apply to the text. When this parameter is not specified, the default antialiasing for the subsystem and target device are applied.\n     * @param {FontAntialiasType|string} antiAlias\n     */\n    fontAntialias(antiAlias) {\n        this._qualifierModel.fontAntialias = antiAlias;\n        return this;\n    }\n    /**\n     * The name of any universally available font or a custom font, specified as the public ID of a raw, authenticated font in your account.\n     * For details on custom fonts, see {@link https://cloudinary.com/documentation/layers#custom_fonts|Using custom fonts for text overlays}.\n     * @param {string} fontFamilyName\n     */\n    fontFamily(fontFamilyName) {\n        this._qualifierModel.fontFamily = fontFamilyName;\n        return this;\n    }\n    /**\n     * @param {number} fontSize The font size\n     */\n    fontSize(fontSize) {\n        this._qualifierModel.fontSize = fontSize;\n        return this;\n    }\n    /**\n     * @param {FontWeightType|string} fontWeight The font weight\n     */\n    fontWeight(fontWeight) {\n        this._qualifierModel.fontWeight = fontWeight;\n        return this;\n    }\n    /**\n     *\n     * @param {string} fontStyle The font style.\n     */\n    fontStyle(fontStyle) {\n        this._qualifierModel.fontStyle = fontStyle;\n        return this;\n    }\n    /**\n     * @param {string} fontHinting The outline hinting style to apply to the text. When this parameter is not specified, the default hint style for the font and target device are applied.\n     */\n    fontHinting(fontHinting) {\n        this._qualifierModel.fontHinting = fontHinting;\n        return this;\n    }\n    /**\n     *\n     * @param {TextDecorationType|string} textDecoration The font decoration type.\n     */\n    textDecoration(textDecoration) {\n        this._qualifierModel.textDecoration = textDecoration;\n        return this;\n    }\n    /**\n     * @param {TextAlignmentType|string} textAlignment The text alignment\n     */\n    textAlignment(textAlignment) {\n        this._qualifierModel.textAlignment = textAlignment;\n        return this;\n    }\n    /**\n     * @description Whether to include an outline stroke. Set the color and weight of the stroke\n     */\n    stroke(textStroke) {\n        if (textStroke) {\n            const strokeStyle = textStroke.split('_');\n            this._qualifierModel.stroke = {\n                width: +(strokeStyle[1].replace('px', '')),\n                color: strokeStyle[strokeStyle.length - 1]\n            };\n        }\n        else {\n            this._qualifierModel.stroke = true;\n        }\n        return this;\n    }\n    toString() {\n        const { stroke } = this._qualifierModel;\n        let strokeStr = '';\n        if (stroke) {\n            strokeStr = isISolidStrokeModel(stroke) ? `stroke_${solid(stroke.width, stroke.color)}` : 'stroke';\n        }\n        return [\n            `${serializeCloudinaryCharacters(this._qualifierModel.fontFamily)}_${this._qualifierModel.fontSize}`,\n            this._qualifierModel.fontWeight !== normalFontWeight() && this._qualifierModel.fontWeight,\n            this._qualifierModel.fontStyle !== normalFontStyle() && this._qualifierModel.fontStyle,\n            this._qualifierModel.textDecoration !== normalTextDecoration() && this._qualifierModel.textDecoration,\n            this._qualifierModel.textAlignment,\n            strokeStr,\n            this._qualifierModel.letterSpacing && `letter_spacing_${this._qualifierModel.letterSpacing}`,\n            this._qualifierModel.lineSpacing && `line_spacing_${this._qualifierModel.lineSpacing}`,\n            this._qualifierModel.fontAntialias && `antialias_${this._qualifierModel.fontAntialias}`,\n            this._qualifierModel.fontHinting && `hinting_${this._qualifierModel.fontHinting}`\n        ].filter((a) => a).join('_');\n    }\n}\nexport { TextStyle };\n"],"mappings":";;;;AAAA,SAASA,MAAM,IAAIC,gBAAgB,QAAQ,iBAAiB;AAC5D,SAASD,MAAM,IAAIE,eAAe,QAAQ,gBAAgB;AAC1D,SAASF,MAAM,IAAIG,oBAAoB,QAAQ,qBAAqB;AACpE,SAASC,6BAA6B,QAAQ,oDAAoD;AAClG,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IASMC,SAAS;EAAA;EAAA;EACX;AACJ;AACA;AACA;EACI,mBAAYC,UAAU,EAAEC,QAAQ,EAAE;IAAA;IAAA;IAC9B;IACA,IAAI,CAACD,UAAU,IAAI,CAACC,QAAQ,EAAE;MAC1B;IACJ;IACA,MAAKC,eAAe,CAACF,UAAU,GAAGA,UAAU;IAC5C,MAAKE,eAAe,CAACD,QAAQ,GAAGA,QAAQ;IAAC;EAC7C;EACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,qBAAYE,OAAO,EAAE;MACjB,IAAI,CAACD,eAAe,CAACE,WAAW,GAAGD,OAAO;MAC1C,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,uBAAcA,OAAO,EAAE;MACnB,IAAI,CAACD,eAAe,CAACG,aAAa,GAAGF,OAAO;MAC5C,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,uBAAcG,SAAS,EAAE;MACrB,IAAI,CAACJ,eAAe,CAACK,aAAa,GAAGD,SAAS;MAC9C,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAWE,cAAc,EAAE;MACvB,IAAI,CAACN,eAAe,CAACF,UAAU,GAAGQ,cAAc;MAChD,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,kBAASP,SAAQ,EAAE;MACf,IAAI,CAACC,eAAe,CAACD,QAAQ,GAAGA,SAAQ;MACxC,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,oBAAWQ,WAAU,EAAE;MACnB,IAAI,CAACP,eAAe,CAACO,UAAU,GAAGA,WAAU;MAC5C,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,mBAAUC,UAAS,EAAE;MACjB,IAAI,CAACR,eAAe,CAACQ,SAAS,GAAGA,UAAS;MAC1C,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,qBAAYC,YAAW,EAAE;MACrB,IAAI,CAACT,eAAe,CAACS,WAAW,GAAGA,YAAW;MAC9C,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,wBAAeC,eAAc,EAAE;MAC3B,IAAI,CAACV,eAAe,CAACU,cAAc,GAAGA,eAAc;MACpD,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,uBAAcC,cAAa,EAAE;MACzB,IAAI,CAACX,eAAe,CAACW,aAAa,GAAGA,cAAa;MAClD,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,gBAAOC,UAAU,EAAE;MACf,IAAIA,UAAU,EAAE;QACZ,IAAMC,WAAW,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;QACzC,IAAI,CAACd,eAAe,CAACe,MAAM,GAAG;UAC1BC,KAAK,EAAE,CAAEH,WAAW,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAE;UAC1CC,KAAK,EAAEL,WAAW,CAACA,WAAW,CAACM,MAAM,GAAG,CAAC;QAC7C,CAAC;MACL,CAAC,MACI;QACD,IAAI,CAACnB,eAAe,CAACe,MAAM,GAAG,IAAI;MACtC;MACA,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,IAAQA,MAAM,GAAK,IAAI,CAACf,eAAe,CAA/Be,MAAM;MACd,IAAIK,SAAS,GAAG,EAAE;MAClB,IAAIL,MAAM,EAAE;QACRK,SAAS,GAAGxB,mBAAmB,CAACmB,MAAM,CAAC,oBAAapB,KAAK,CAACoB,MAAM,CAACC,KAAK,EAAED,MAAM,CAACG,KAAK,CAAC,IAAK,QAAQ;MACtG;MACA,OAAO,WACAzB,6BAA6B,CAAC,IAAI,CAACO,eAAe,CAACF,UAAU,CAAC,cAAI,IAAI,CAACE,eAAe,CAACD,QAAQ,GAClG,IAAI,CAACC,eAAe,CAACO,UAAU,KAAKjB,gBAAgB,EAAE,IAAI,IAAI,CAACU,eAAe,CAACO,UAAU,EACzF,IAAI,CAACP,eAAe,CAACQ,SAAS,KAAKjB,eAAe,EAAE,IAAI,IAAI,CAACS,eAAe,CAACQ,SAAS,EACtF,IAAI,CAACR,eAAe,CAACU,cAAc,KAAKlB,oBAAoB,EAAE,IAAI,IAAI,CAACQ,eAAe,CAACU,cAAc,EACrG,IAAI,CAACV,eAAe,CAACW,aAAa,EAClCS,SAAS,EACT,IAAI,CAACpB,eAAe,CAACG,aAAa,6BAAsB,IAAI,CAACH,eAAe,CAACG,aAAa,CAAE,EAC5F,IAAI,CAACH,eAAe,CAACE,WAAW,2BAAoB,IAAI,CAACF,eAAe,CAACE,WAAW,CAAE,EACtF,IAAI,CAACF,eAAe,CAACK,aAAa,wBAAiB,IAAI,CAACL,eAAe,CAACK,aAAa,CAAE,EACvF,IAAI,CAACL,eAAe,CAACS,WAAW,sBAAe,IAAI,CAACT,eAAe,CAACS,WAAW,CAAE,CACpF,CAACY,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC;MAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAChC;EAAC;EAAA;AAAA,EA1HmB7B,cAAc;AA4HtC,SAASG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}