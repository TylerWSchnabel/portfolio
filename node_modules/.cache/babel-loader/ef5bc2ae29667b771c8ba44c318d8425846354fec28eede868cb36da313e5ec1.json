{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { CHROMA_VALUE_TO_CHROMA_MODEL_ENUM, CHROMA_MODEL_ENUM_TO_CHROMA_VALUE, ACTION_TYPE_TO_QUALITY_MODE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Controls the quality of the delivered image or video.\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nvar DeliveryQualityAction = /*#__PURE__*/function (_DeliveryAction) {\n  _inherits(DeliveryQualityAction, _DeliveryAction);\n  var _super = _createSuper(DeliveryQualityAction);\n  /**\n   * @param {Qualifiers.Quality} qualityValue a Quality value\n   */\n  function DeliveryQualityAction(qualityValue) {\n    _classCallCheck(this, DeliveryQualityAction);\n    return _super.call(this, 'q', qualityValue.toString(), 'level');\n  }\n  /**\n   * Selet the Chroma sub sampling</br>\n   * <b>Learn more</b>: {@link https://cloudinary.com/documentation/image_optimization#toggle_chroma_subsampling|Toggling chroma subsampling}\n   * @param {420 | 444 | number} type The chroma sub sampling type\n   */\n  _createClass(DeliveryQualityAction, [{\n    key: \"chromaSubSampling\",\n    value: function chromaSubSampling(type) {\n      this._actionModel.chromaSubSampling = CHROMA_VALUE_TO_CHROMA_MODEL_ENUM[type];\n      var qualityWithSubSampling = new QualifierValue([this._actionModel.level, type]);\n      qualityWithSubSampling.setDelimiter(':');\n      // We either have chroma or quantization, but not both\n      return this.addQualifier(new Qualifier('q', qualityWithSubSampling));\n    }\n    /**\n     * Controls the final quality by setting a maximum quantization percentage\n     * @param {number} val\n     */\n  }, {\n    key: \"quantization\",\n    value: function quantization(val) {\n      this._actionModel.quantization = val;\n      var qualityWithQuantization = new QualifierValue([this._actionModel.level, \"qmax_\".concat(val)]).setDelimiter(':');\n      // We either have chroma or quantization, but not both\n      return this.addQualifier(new Qualifier('q', qualityWithQuantization));\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var level = actionModel.level,\n        chromaSubSampling = actionModel.chromaSubSampling,\n        quantization = actionModel.quantization;\n      var levelType = ACTION_TYPE_TO_QUALITY_MODE_MAP[level] || level;\n      var result = new this(levelType);\n      if (chromaSubSampling) {\n        //Turn strings like 'CHROMA_420' to 420\n        var chromaValue = CHROMA_MODEL_ENUM_TO_CHROMA_VALUE[chromaSubSampling.toUpperCase()];\n        chromaValue && result.chromaSubSampling(+chromaValue);\n      }\n      quantization && result.quantization(quantization);\n      return result;\n    }\n  }]);\n  return DeliveryQualityAction;\n}(DeliveryAction);\nexport { DeliveryQualityAction };","map":{"version":3,"names":["QualifierValue","Qualifier","DeliveryAction","CHROMA_VALUE_TO_CHROMA_MODEL_ENUM","CHROMA_MODEL_ENUM_TO_CHROMA_VALUE","ACTION_TYPE_TO_QUALITY_MODE_MAP","DeliveryQualityAction","qualityValue","toString","type","_actionModel","chromaSubSampling","qualityWithSubSampling","level","setDelimiter","addQualifier","val","quantization","qualityWithQuantization","actionModel","levelType","result","chromaValue","toUpperCase"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryQualityAction.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { CHROMA_VALUE_TO_CHROMA_MODEL_ENUM, CHROMA_MODEL_ENUM_TO_CHROMA_VALUE, ACTION_TYPE_TO_QUALITY_MODE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Controls the quality of the delivered image or video.\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryQualityAction extends DeliveryAction {\n    /**\n     * @param {Qualifiers.Quality} qualityValue a Quality value\n     */\n    constructor(qualityValue) {\n        super('q', qualityValue.toString(), 'level');\n    }\n    /**\n     * Selet the Chroma sub sampling</br>\n     * <b>Learn more</b>: {@link https://cloudinary.com/documentation/image_optimization#toggle_chroma_subsampling|Toggling chroma subsampling}\n     * @param {420 | 444 | number} type The chroma sub sampling type\n     */\n    chromaSubSampling(type) {\n        this._actionModel.chromaSubSampling = CHROMA_VALUE_TO_CHROMA_MODEL_ENUM[type];\n        const qualityWithSubSampling = new QualifierValue([this._actionModel.level, type]);\n        qualityWithSubSampling.setDelimiter(':');\n        // We either have chroma or quantization, but not both\n        return this.addQualifier(new Qualifier('q', qualityWithSubSampling));\n    }\n    /**\n     * Controls the final quality by setting a maximum quantization percentage\n     * @param {number} val\n     */\n    quantization(val) {\n        this._actionModel.quantization = val;\n        const qualityWithQuantization = new QualifierValue([this._actionModel.level, `qmax_${val}`]).setDelimiter(':');\n        // We either have chroma or quantization, but not both\n        return this.addQualifier(new Qualifier('q', qualityWithQuantization));\n    }\n    static fromJson(actionModel) {\n        const { level, chromaSubSampling, quantization } = actionModel;\n        const levelType = ACTION_TYPE_TO_QUALITY_MODE_MAP[level] || level;\n        const result = new this(levelType);\n        if (chromaSubSampling) {\n            //Turn strings like 'CHROMA_420' to 420\n            const chromaValue = CHROMA_MODEL_ENUM_TO_CHROMA_VALUE[chromaSubSampling.toUpperCase()];\n            chromaValue && result.chromaSubSampling(+chromaValue);\n        }\n        quantization && result.quantization(quantization);\n        return result;\n    }\n}\nexport { DeliveryQualityAction };\n"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,iCAAiC,EAAEC,iCAAiC,EAAEC,+BAA+B,QAAQ,qCAAqC;AAC3J;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,qBAAqB;EAAA;EAAA;EACvB;AACJ;AACA;EACI,+BAAYC,YAAY,EAAE;IAAA;IAAA,yBAChB,GAAG,EAAEA,YAAY,CAACC,QAAQ,EAAE,EAAE,OAAO;EAC/C;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,2BAAkBC,IAAI,EAAE;MACpB,IAAI,CAACC,YAAY,CAACC,iBAAiB,GAAGR,iCAAiC,CAACM,IAAI,CAAC;MAC7E,IAAMG,sBAAsB,GAAG,IAAIZ,cAAc,CAAC,CAAC,IAAI,CAACU,YAAY,CAACG,KAAK,EAAEJ,IAAI,CAAC,CAAC;MAClFG,sBAAsB,CAACE,YAAY,CAAC,GAAG,CAAC;MACxC;MACA,OAAO,IAAI,CAACC,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAEW,sBAAsB,CAAC,CAAC;IACxE;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,sBAAaI,GAAG,EAAE;MACd,IAAI,CAACN,YAAY,CAACO,YAAY,GAAGD,GAAG;MACpC,IAAME,uBAAuB,GAAG,IAAIlB,cAAc,CAAC,CAAC,IAAI,CAACU,YAAY,CAACG,KAAK,iBAAUG,GAAG,EAAG,CAAC,CAACF,YAAY,CAAC,GAAG,CAAC;MAC9G;MACA,OAAO,IAAI,CAACC,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAEiB,uBAAuB,CAAC,CAAC;IACzE;EAAC;IAAA;IAAA,OACD,kBAAgBC,WAAW,EAAE;MACzB,IAAQN,KAAK,GAAsCM,WAAW,CAAtDN,KAAK;QAAEF,iBAAiB,GAAmBQ,WAAW,CAA/CR,iBAAiB;QAAEM,YAAY,GAAKE,WAAW,CAA5BF,YAAY;MAC9C,IAAMG,SAAS,GAAGf,+BAA+B,CAACQ,KAAK,CAAC,IAAIA,KAAK;MACjE,IAAMQ,MAAM,GAAG,IAAI,IAAI,CAACD,SAAS,CAAC;MAClC,IAAIT,iBAAiB,EAAE;QACnB;QACA,IAAMW,WAAW,GAAGlB,iCAAiC,CAACO,iBAAiB,CAACY,WAAW,EAAE,CAAC;QACtFD,WAAW,IAAID,MAAM,CAACV,iBAAiB,CAAC,CAACW,WAAW,CAAC;MACzD;MACAL,YAAY,IAAII,MAAM,CAACJ,YAAY,CAACA,YAAY,CAAC;MACjD,OAAOI,MAAM;IACjB;EAAC;EAAA;AAAA,EAxC+BnB,cAAc;AA0ClD,SAASI,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}