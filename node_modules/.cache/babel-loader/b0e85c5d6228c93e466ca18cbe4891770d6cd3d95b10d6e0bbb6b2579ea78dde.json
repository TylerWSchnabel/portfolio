{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Actions.CustomFunction\n * @see Visit {@link Actions.CustomFunction|Custom functions} for an example\n */\nvar CustomFunctionAction = /*#__PURE__*/function (_Action) {\n  _inherits(CustomFunctionAction, _Action);\n  var _super = _createSuper(CustomFunctionAction);\n  /**\n   *\n   * @param {string} fn The custom function to use, can be a URL or a publicID\n   */\n  function CustomFunctionAction(fn) {\n    var _this;\n    _classCallCheck(this, CustomFunctionAction);\n    _this = _super.call(this);\n    _this.fn = fn;\n    return _this;\n  }\n  _createClass(CustomFunctionAction, [{\n    key: \"encodeCustomFunctionString\",\n    value: function encodeCustomFunctionString(fn) {\n      var encodedSource = base64Encode(fn);\n      return encodedSource;\n    }\n    /**\n     * Use a WASM as a custom function,\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n  }, {\n    key: \"asWasm\",\n    value: function asWasm() {\n      this.mode = 'wasm';\n      return this;\n    }\n    /**\n     * Use a remote URL as a custom function\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n  }, {\n    key: \"asRemote\",\n    value: function asRemote() {\n      this.mode = 'remote';\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      this.encodedFn = this.fn;\n      if (this.mode === 'remote') {\n        this.encodedFn = this.encodeCustomFunctionString(this.fn);\n      }\n      return this.addQualifier(new Qualifier('fn', new QualifierValue([this.pre, this.mode, this.encodedFn])));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return _get(_getPrototypeOf(CustomFunctionAction.prototype), \"toString\", this).call(this).replace(/\\//g, ':');\n    }\n  }]);\n  return CustomFunctionAction;\n}(Action);\nexport default CustomFunctionAction;","map":{"version":3,"names":["base64Encode","Action","QualifierValue","Qualifier","CustomFunctionAction","fn","encodedSource","mode","encodedFn","encodeCustomFunctionString","addQualifier","pre","replace"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/customFunction/CustomFunctionAction.js"],"sourcesContent":["import { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Actions.CustomFunction\n * @see Visit {@link Actions.CustomFunction|Custom functions} for an example\n */\nclass CustomFunctionAction extends Action {\n    /**\n     *\n     * @param {string} fn The custom function to use, can be a URL or a publicID\n     */\n    constructor(fn) {\n        super();\n        this.fn = fn;\n    }\n    encodeCustomFunctionString(fn) {\n        const encodedSource = base64Encode(fn);\n        return encodedSource;\n    }\n    /**\n     * Use a WASM as a custom function,\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n    asWasm() {\n        this.mode = 'wasm';\n        return this;\n    }\n    /**\n     * Use a remote URL as a custom function\n     * Used with the builders of `remote` and `wasm` from {@link Actions.CustomFunction|Custom functions}\n     */\n    asRemote() {\n        this.mode = 'remote';\n        return this;\n    }\n    prepareQualifiers() {\n        this.encodedFn = this.fn;\n        if (this.mode === 'remote') {\n            this.encodedFn = this.encodeCustomFunctionString(this.fn);\n        }\n        return this.addQualifier(new Qualifier('fn', new QualifierValue([this.pre, this.mode, this.encodedFn])));\n    }\n    toString() {\n        return super.toString()\n            .replace(/\\//g, ':');\n    }\n}\nexport default CustomFunctionAction;\n"],"mappings":";;;;;;AAAA,SAASA,YAAY,QAAQ,sCAAsC;AACnE,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AAHA,IAIMC,oBAAoB;EAAA;EAAA;EACtB;AACJ;AACA;AACA;EACI,8BAAYC,EAAE,EAAE;IAAA;IAAA;IACZ;IACA,MAAKA,EAAE,GAAGA,EAAE;IAAC;EACjB;EAAC;IAAA;IAAA,OACD,oCAA2BA,EAAE,EAAE;MAC3B,IAAMC,aAAa,GAAGN,YAAY,CAACK,EAAE,CAAC;MACtC,OAAOC,aAAa;IACxB;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,kBAAS;MACL,IAAI,CAACC,IAAI,GAAG,MAAM;MAClB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,oBAAW;MACP,IAAI,CAACA,IAAI,GAAG,QAAQ;MACpB,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE;MACxB,IAAI,IAAI,CAACE,IAAI,KAAK,QAAQ,EAAE;QACxB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,0BAA0B,CAAC,IAAI,CAACJ,EAAE,CAAC;MAC7D;MACA,OAAO,IAAI,CAACK,YAAY,CAAC,IAAIP,SAAS,CAAC,IAAI,EAAE,IAAID,cAAc,CAAC,CAAC,IAAI,CAACS,GAAG,EAAE,IAAI,CAACJ,IAAI,EAAE,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5G;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,OAAO,mFACFI,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IAC5B;EAAC;EAAA;AAAA,EAvC8BX,MAAM;AAyCzC,eAAeG,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}