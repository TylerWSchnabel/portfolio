{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines how to improve an image by automatically adjusting image colors, contrast and brightness.</br>\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#e_improve|Image improvement effects}\n * @memberOf Actions.Adjust\n */\nvar ImproveAction = /*#__PURE__*/function (_Action) {\n  _inherits(ImproveAction, _Action);\n  var _super = _createSuper(ImproveAction);\n  function ImproveAction() {\n    var _this;\n    _classCallCheck(this, ImproveAction);\n    _this = _super.call(this);\n    _this._actionModel = {\n      actionType: 'improve'\n    };\n    return _this;\n  }\n  /**\n   *\n   * @description The improve mode.\n   * @param {Qualifiers.ImproveMode | string} value\n   */\n  _createClass(ImproveAction, [{\n    key: \"mode\",\n    value: function mode(value) {\n      this.modeValue = value;\n      this._actionModel.mode = value;\n      return this;\n    }\n    /**\n     * @description How much to blend the improved result with the original image, where 0 means only use the original and 100 means only use the improved result. (Range: 0 to 100, Server default: 100)\n     * @param {number} value\n     */\n  }, {\n    key: \"blend\",\n    value: function blend(value) {\n      this.blendValue = value;\n      this._actionModel.blend = value;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue = new QualifierValue(['improve', this.modeValue, this.blendValue]).setDelimiter(':');\n      this.addQualifier(new Qualifier('e', qualifierValue));\n      return this;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var mode = actionModel.mode,\n        blend = actionModel.blend;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this();\n      mode && result.mode(mode);\n      blend && result.blend(blend);\n      return result;\n    }\n  }]);\n  return ImproveAction;\n}(Action);\nexport { ImproveAction };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","ImproveAction","_actionModel","actionType","value","modeValue","mode","blendValue","blend","qualifierValue","setDelimiter","addQualifier","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/adjust/ImproveAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines how to improve an image by automatically adjusting image colors, contrast and brightness.</br>\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#e_improve|Image improvement effects}\n * @memberOf Actions.Adjust\n */\nclass ImproveAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = { actionType: 'improve' };\n    }\n    /**\n     *\n     * @description The improve mode.\n     * @param {Qualifiers.ImproveMode | string} value\n     */\n    mode(value) {\n        this.modeValue = value;\n        this._actionModel.mode = value;\n        return this;\n    }\n    /**\n     * @description How much to blend the improved result with the original image, where 0 means only use the original and 100 means only use the improved result. (Range: 0 to 100, Server default: 100)\n     * @param {number} value\n     */\n    blend(value) {\n        this.blendValue = value;\n        this._actionModel.blend = value;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue(['improve', this.modeValue, this.blendValue]).setDelimiter(':');\n        this.addQualifier(new Qualifier('e', qualifierValue));\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { mode, blend } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        mode && result.mode(mode);\n        blend && result.blend(blend);\n        return result;\n    }\n}\nexport { ImproveAction };\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AAJA,IAKMC,aAAa;EAAA;EAAA;EACf,yBAAc;IAAA;IAAA;IACV;IACA,MAAKC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAU,CAAC;IAAC;EAClD;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,cAAKC,KAAK,EAAE;MACR,IAAI,CAACC,SAAS,GAAGD,KAAK;MACtB,IAAI,CAACF,YAAY,CAACI,IAAI,GAAGF,KAAK;MAC9B,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,eAAMA,KAAK,EAAE;MACT,IAAI,CAACG,UAAU,GAAGH,KAAK;MACvB,IAAI,CAACF,YAAY,CAACM,KAAK,GAAGJ,KAAK;MAC/B,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAMK,cAAc,GAAG,IAAIV,cAAc,CAAC,CAAC,SAAS,EAAE,IAAI,CAACM,SAAS,EAAE,IAAI,CAACE,UAAU,CAAC,CAAC,CAACG,YAAY,CAAC,GAAG,CAAC;MACzG,IAAI,CAACC,YAAY,CAAC,IAAIX,SAAS,CAAC,GAAG,EAAES,cAAc,CAAC,CAAC;MACrD,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,kBAAgBG,WAAW,EAAE;MACzB,IAAQN,IAAI,GAAYM,WAAW,CAA3BN,IAAI;QAAEE,KAAK,GAAKI,WAAW,CAArBJ,KAAK;MACnB;MACA;MACA,IAAMK,MAAM,GAAG,IAAI,IAAI,EAAE;MACzBP,IAAI,IAAIO,MAAM,CAACP,IAAI,CAACA,IAAI,CAAC;MACzBE,KAAK,IAAIK,MAAM,CAACL,KAAK,CAACA,KAAK,CAAC;MAC5B,OAAOK,MAAM;IACjB;EAAC;EAAA;AAAA,EArCuBf,MAAM;AAuClC,SAASG,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}