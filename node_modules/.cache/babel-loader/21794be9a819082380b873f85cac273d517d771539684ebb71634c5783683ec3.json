{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar SimulateColorBlindEffectAction = /*#__PURE__*/function (_Action) {\n  _inherits(SimulateColorBlindEffectAction, _Action);\n  var _super = _createSuper(SimulateColorBlindEffectAction);\n  function SimulateColorBlindEffectAction() {\n    var _this;\n    _classCallCheck(this, SimulateColorBlindEffectAction);\n    _this = _super.call(this);\n    _this._actionModel = {};\n    _this._actionModel.actionType = 'simulateColorblind';\n    _this.addQualifier(new Qualifier('e', \"simulate_colorblind\"));\n    return _this;\n  }\n  _createClass(SimulateColorBlindEffectAction, [{\n    key: \"setQualifier\",\n    value: function setQualifier(val) {\n      var strToAppend = \":\".concat(val);\n      if (val) {\n        this.addQualifier(new Qualifier('e', \"simulate_colorblind\".concat(strToAppend)));\n      }\n      return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | SimulateColorBlindType | string} cond\n     * @return {this}\n     */\n  }, {\n    key: \"condition\",\n    value: function condition(cond) {\n      this._actionModel.condition = cond;\n      return this.setQualifier(cond);\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var actionType = actionModel.actionType,\n        condition = actionModel.condition;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this();\n      condition && result.condition(condition);\n      return result;\n    }\n  }]);\n  return SimulateColorBlindEffectAction;\n}(Action);\nexport { SimulateColorBlindEffectAction };","map":{"version":3,"names":["Action","Qualifier","SimulateColorBlindEffectAction","_actionModel","actionType","addQualifier","val","strToAppend","cond","condition","setQualifier","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/SimulateColorBlind.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Simulates the way an image would appear to someone with the specified color blind condition\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimulateColorBlindEffectAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'simulateColorblind';\n        this.addQualifier(new Qualifier('e', `simulate_colorblind`));\n    }\n    setQualifier(val) {\n        const strToAppend = `:${val}`;\n        if (val) {\n            this.addQualifier(new Qualifier('e', `simulate_colorblind${strToAppend}`));\n        }\n        return this;\n    }\n    /**\n     * @description Sets the color blind condition to simulate.\n     * @param {Qualifiers.simulateColorBlindValues | SimulateColorBlindType | string} cond\n     * @return {this}\n     */\n    condition(cond) {\n        this._actionModel.condition = cond;\n        return this.setQualifier(cond);\n    }\n    static fromJson(actionModel) {\n        const { actionType, condition } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        condition && result.condition(condition);\n        return result;\n    }\n}\nexport { SimulateColorBlindEffectAction };\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,8BAA8B;EAAA;EAAA;EAChC,0CAAc;IAAA;IAAA;IACV;IACA,MAAKC,YAAY,GAAG,CAAC,CAAC;IACtB,MAAKA,YAAY,CAACC,UAAU,GAAG,oBAAoB;IACnD,MAAKC,YAAY,CAAC,IAAIJ,SAAS,CAAC,GAAG,wBAAwB,CAAC;IAAC;EACjE;EAAC;IAAA;IAAA,OACD,sBAAaK,GAAG,EAAE;MACd,IAAMC,WAAW,cAAOD,GAAG,CAAE;MAC7B,IAAIA,GAAG,EAAE;QACL,IAAI,CAACD,YAAY,CAAC,IAAIJ,SAAS,CAAC,GAAG,+BAAwBM,WAAW,EAAG,CAAC;MAC9E;MACA,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,mBAAUC,IAAI,EAAE;MACZ,IAAI,CAACL,YAAY,CAACM,SAAS,GAAGD,IAAI;MAClC,OAAO,IAAI,CAACE,YAAY,CAACF,IAAI,CAAC;IAClC;EAAC;IAAA;IAAA,OACD,kBAAgBG,WAAW,EAAE;MACzB,IAAQP,UAAU,GAAgBO,WAAW,CAArCP,UAAU;QAAEK,SAAS,GAAKE,WAAW,CAAzBF,SAAS;MAC7B;MACA;MACA,IAAMG,MAAM,GAAG,IAAI,IAAI,EAAE;MACzBH,SAAS,IAAIG,MAAM,CAACH,SAAS,CAACA,SAAS,CAAC;MACxC,OAAOG,MAAM;IACjB;EAAC;EAAA;AAAA,EA9BwCZ,MAAM;AAgCnD,SAASE,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}