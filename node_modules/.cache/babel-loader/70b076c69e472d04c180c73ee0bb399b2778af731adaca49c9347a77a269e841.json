{"ast":null,"code":"import _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description\n * Defines the mode of blending to use when overlaying an image.\n * Even though BlendMode is technically an actionQualifier, it implements exactly the same functionality as an action.\n * This is true because Position is actually compounded of multiple qualifiers\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#blending_and_masking_layers|Overlay blending effects}\n *\n * @memberOf Qualifiers.BlendMode\n * @extends SDK.Action\n */\nvar BlendModeQualifier = /*#__PURE__*/function (_Action) {\n  _inherits(BlendModeQualifier, _Action);\n  var _super = _createSuper(BlendModeQualifier);\n  function BlendModeQualifier(blendMode, level) {\n    var _this;\n    _classCallCheck(this, BlendModeQualifier);\n    _this = _super.call(this);\n    _this.addQualifier(new Qualifier('e', new QualifierValue([blendMode, level])));\n    return _this;\n  }\n  return _createClass(BlendModeQualifier);\n}(Action);\nexport { BlendModeQualifier };","map":{"version":3,"names":["Action","Qualifier","QualifierValue","BlendModeQualifier","blendMode","level","addQualifier"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/blendMode/BlendModeQualifier.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description\n * Defines the mode of blending to use when overlaying an image.\n * Even though BlendMode is technically an actionQualifier, it implements exactly the same functionality as an action.\n * This is true because Position is actually compounded of multiple qualifiers\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#blending_and_masking_layers|Overlay blending effects}\n *\n * @memberOf Qualifiers.BlendMode\n * @extends SDK.Action\n */\nclass BlendModeQualifier extends Action {\n    constructor(blendMode, level) {\n        super();\n        this.addQualifier(new Qualifier('e', new QualifierValue([blendMode, level])));\n    }\n}\nexport { BlendModeQualifier };\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAWMC,kBAAkB;EAAA;EAAA;EACpB,4BAAYC,SAAS,EAAEC,KAAK,EAAE;IAAA;IAAA;IAC1B;IACA,MAAKC,YAAY,CAAC,IAAIL,SAAS,CAAC,GAAG,EAAE,IAAIC,cAAc,CAAC,CAACE,SAAS,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC;EAClF;EAAC;AAAA,EAJ4BL,MAAM;AAMvC,SAASG,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}