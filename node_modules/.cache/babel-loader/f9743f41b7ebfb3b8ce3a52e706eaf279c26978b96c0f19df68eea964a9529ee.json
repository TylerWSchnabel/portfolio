{"ast":null,"code":"import _toConsumableArray from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { autoGravity, focusOn } from \"../../qualifiers/gravity.js\";\nimport { FocusOnValue, ocr } from \"../../qualifiers/focusOn.js\";\nimport { AutoFocus } from \"../../qualifiers/autoFocus.js\";\nimport { CompassGravity } from \"../../qualifiers/gravity/compassGravity/CompassGravity.js\";\nimport { CompassQualifier } from \"../../qualifiers/gravity/qualifiers/compass/CompassQualifier.js\";\n/**\n * Validates that gravityModel is an ICompassGravityModel\n * @param gravityModel\n */\nfunction isCompassGravityModel(gravityModel) {\n  return gravityModel.gravityType === 'direction';\n}\n/**\n * Validates that gravityModel is an IOcrGravityModel\n * @param gravityModel\n */\nfunction isOcrGravityModel(gravityModel) {\n  return gravityModel.gravityType === 'ocr';\n}\n/**\n * Validates that gravityModel is an IAutoGravityModel\n * @param gravityModel\n */\nfunction isAutoGravityModel(gravityModel) {\n  return gravityModel.gravityType === 'auto';\n}\n/**\n * Create AutoFocus from IAutoGravityObjectModel\n * @param autoGravityObjectModel\n */\nfunction createAutoFocusFromModel(autoGravityObjectModel) {\n  var object = autoGravityObjectModel.object,\n    weight = autoGravityObjectModel.weight,\n    avoid = autoGravityObjectModel.avoid;\n  var autoFocus = new AutoFocus(new FocusOnValue(object));\n  (weight || weight === 0) && autoFocus.weight(weight);\n  avoid && autoFocus.avoid();\n  return autoFocus;\n}\n/**\n * Create AutoGravity from IAutoGravityModel\n * @param gravityModel\n */\nfunction createAutoGravityFromModel(gravityModel) {\n  var _autoGravity;\n  var autoFocusModel = gravityModel.autoFocus || [];\n  var autoFocus = autoFocusModel.map(createAutoFocusFromModel);\n  return (_autoGravity = autoGravity()).autoFocus.apply(_autoGravity, _toConsumableArray(autoFocus));\n}\n/**\n * Create FocusOnGravity from given IFocusOnGravityModel\n * @param gravityModel\n */\nfunction createFocusOnGravityFromModel(gravityModel) {\n  var focusOnObjects = (gravityModel.focusOnObjects || []).map(function (str) {\n    return new FocusOnValue(str);\n  });\n  var result = focusOn.apply(void 0, _toConsumableArray(focusOnObjects));\n  if (gravityModel.fallbackGravity) {\n    var _autoGravity2 = createAutoGravityFromModel(gravityModel.fallbackGravity);\n    result.fallbackGravity(_autoGravity2);\n  }\n  return result;\n}\n/**\n * Create gravity instance from given gravity model\n * @param gravityModel\n */\nfunction createGravityFromModel(gravityModel) {\n  if (isCompassGravityModel(gravityModel)) {\n    return new CompassGravity(new CompassQualifier(gravityModel.compass));\n  }\n  if (isOcrGravityModel(gravityModel)) {\n    return focusOn(ocr());\n  }\n  if (isAutoGravityModel(gravityModel)) {\n    return createAutoGravityFromModel(gravityModel);\n  }\n  return createFocusOnGravityFromModel(gravityModel);\n}\nexport { createGravityFromModel };","map":{"version":3,"names":["autoGravity","focusOn","FocusOnValue","ocr","AutoFocus","CompassGravity","CompassQualifier","isCompassGravityModel","gravityModel","gravityType","isOcrGravityModel","isAutoGravityModel","createAutoFocusFromModel","autoGravityObjectModel","object","weight","avoid","autoFocus","createAutoGravityFromModel","autoFocusModel","map","createFocusOnGravityFromModel","focusOnObjects","str","result","fallbackGravity","createGravityFromModel","compass"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/internal/models/createGravityFromModel.js"],"sourcesContent":["import { autoGravity, focusOn } from \"../../qualifiers/gravity.js\";\nimport { FocusOnValue, ocr } from \"../../qualifiers/focusOn.js\";\nimport { AutoFocus } from \"../../qualifiers/autoFocus.js\";\nimport { CompassGravity } from \"../../qualifiers/gravity/compassGravity/CompassGravity.js\";\nimport { CompassQualifier } from \"../../qualifiers/gravity/qualifiers/compass/CompassQualifier.js\";\n/**\n * Validates that gravityModel is an ICompassGravityModel\n * @param gravityModel\n */\nfunction isCompassGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'direction';\n}\n/**\n * Validates that gravityModel is an IOcrGravityModel\n * @param gravityModel\n */\nfunction isOcrGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'ocr';\n}\n/**\n * Validates that gravityModel is an IAutoGravityModel\n * @param gravityModel\n */\nfunction isAutoGravityModel(gravityModel) {\n    return gravityModel.gravityType === 'auto';\n}\n/**\n * Create AutoFocus from IAutoGravityObjectModel\n * @param autoGravityObjectModel\n */\nfunction createAutoFocusFromModel(autoGravityObjectModel) {\n    const { object, weight, avoid } = autoGravityObjectModel;\n    const autoFocus = new AutoFocus(new FocusOnValue(object));\n    (weight || weight === 0) && autoFocus.weight(weight);\n    avoid && autoFocus.avoid();\n    return autoFocus;\n}\n/**\n * Create AutoGravity from IAutoGravityModel\n * @param gravityModel\n */\nfunction createAutoGravityFromModel(gravityModel) {\n    const autoFocusModel = gravityModel.autoFocus || [];\n    const autoFocus = autoFocusModel.map(createAutoFocusFromModel);\n    return autoGravity().autoFocus(...autoFocus);\n}\n/**\n * Create FocusOnGravity from given IFocusOnGravityModel\n * @param gravityModel\n */\nfunction createFocusOnGravityFromModel(gravityModel) {\n    const focusOnObjects = (gravityModel.focusOnObjects || []).map((str) => new FocusOnValue(str));\n    const result = focusOn(...focusOnObjects);\n    if (gravityModel.fallbackGravity) {\n        const autoGravity = createAutoGravityFromModel(gravityModel.fallbackGravity);\n        result.fallbackGravity(autoGravity);\n    }\n    return result;\n}\n/**\n * Create gravity instance from given gravity model\n * @param gravityModel\n */\nfunction createGravityFromModel(gravityModel) {\n    if (isCompassGravityModel(gravityModel)) {\n        return new CompassGravity(new CompassQualifier(gravityModel.compass));\n    }\n    if (isOcrGravityModel(gravityModel)) {\n        return focusOn(ocr());\n    }\n    if (isAutoGravityModel(gravityModel)) {\n        return createAutoGravityFromModel(gravityModel);\n    }\n    return createFocusOnGravityFromModel(gravityModel);\n}\nexport { createGravityFromModel };\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,6BAA6B;AAClE,SAASC,YAAY,EAAEC,GAAG,QAAQ,6BAA6B;AAC/D,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,cAAc,QAAQ,2DAA2D;AAC1F,SAASC,gBAAgB,QAAQ,iEAAiE;AAClG;AACA;AACA;AACA;AACA,SAASC,qBAAqB,CAACC,YAAY,EAAE;EACzC,OAAOA,YAAY,CAACC,WAAW,KAAK,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiB,CAACF,YAAY,EAAE;EACrC,OAAOA,YAAY,CAACC,WAAW,KAAK,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkB,CAACH,YAAY,EAAE;EACtC,OAAOA,YAAY,CAACC,WAAW,KAAK,MAAM;AAC9C;AACA;AACA;AACA;AACA;AACA,SAASG,wBAAwB,CAACC,sBAAsB,EAAE;EACtD,IAAQC,MAAM,GAAoBD,sBAAsB,CAAhDC,MAAM;IAAEC,MAAM,GAAYF,sBAAsB,CAAxCE,MAAM;IAAEC,KAAK,GAAKH,sBAAsB,CAAhCG,KAAK;EAC7B,IAAMC,SAAS,GAAG,IAAIb,SAAS,CAAC,IAAIF,YAAY,CAACY,MAAM,CAAC,CAAC;EACzD,CAACC,MAAM,IAAIA,MAAM,KAAK,CAAC,KAAKE,SAAS,CAACF,MAAM,CAACA,MAAM,CAAC;EACpDC,KAAK,IAAIC,SAAS,CAACD,KAAK,EAAE;EAC1B,OAAOC,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA,SAASC,0BAA0B,CAACV,YAAY,EAAE;EAAA;EAC9C,IAAMW,cAAc,GAAGX,YAAY,CAACS,SAAS,IAAI,EAAE;EACnD,IAAMA,SAAS,GAAGE,cAAc,CAACC,GAAG,CAACR,wBAAwB,CAAC;EAC9D,OAAO,gBAAAZ,WAAW,EAAE,EAACiB,SAAS,wCAAIA,SAAS,EAAC;AAChD;AACA;AACA;AACA;AACA;AACA,SAASI,6BAA6B,CAACb,YAAY,EAAE;EACjD,IAAMc,cAAc,GAAG,CAACd,YAAY,CAACc,cAAc,IAAI,EAAE,EAAEF,GAAG,CAAC,UAACG,GAAG;IAAA,OAAK,IAAIrB,YAAY,CAACqB,GAAG,CAAC;EAAA,EAAC;EAC9F,IAAMC,MAAM,GAAGvB,OAAO,kCAAIqB,cAAc,EAAC;EACzC,IAAId,YAAY,CAACiB,eAAe,EAAE;IAC9B,IAAMzB,aAAW,GAAGkB,0BAA0B,CAACV,YAAY,CAACiB,eAAe,CAAC;IAC5ED,MAAM,CAACC,eAAe,CAACzB,aAAW,CAAC;EACvC;EACA,OAAOwB,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,SAASE,sBAAsB,CAAClB,YAAY,EAAE;EAC1C,IAAID,qBAAqB,CAACC,YAAY,CAAC,EAAE;IACrC,OAAO,IAAIH,cAAc,CAAC,IAAIC,gBAAgB,CAACE,YAAY,CAACmB,OAAO,CAAC,CAAC;EACzE;EACA,IAAIjB,iBAAiB,CAACF,YAAY,CAAC,EAAE;IACjC,OAAOP,OAAO,CAACE,GAAG,EAAE,CAAC;EACzB;EACA,IAAIQ,kBAAkB,CAACH,YAAY,CAAC,EAAE;IAClC,OAAOU,0BAA0B,CAACV,YAAY,CAAC;EACnD;EACA,OAAOa,6BAA6B,CAACb,YAAY,CAAC;AACtD;AACA,SAASkB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}