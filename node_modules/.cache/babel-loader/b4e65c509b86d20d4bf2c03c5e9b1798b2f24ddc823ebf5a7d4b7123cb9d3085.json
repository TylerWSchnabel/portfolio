{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nvar ToAnimatedAction = /*#__PURE__*/function (_Action) {\n  _inherits(ToAnimatedAction, _Action);\n  var _super = _createSuper(ToAnimatedAction);\n  function ToAnimatedAction() {\n    var _this;\n    var animatedFormat = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    _classCallCheck(this, ToAnimatedAction);\n    _this = _super.call(this);\n    _this._actionModel = {\n      actionType: 'toAnimated'\n    };\n    if (animatedFormat.toString() === 'webp') {\n      _this.addFlag(animatedWebP());\n    }\n    _this.addFlag(animated());\n    if (animatedFormat) {\n      _this.addQualifier(new Qualifier('f', animatedFormat));\n    }\n    _this._actionModel.animatedFormat = animatedFormat;\n    return _this;\n  }\n  /**\n   * @description Sets the time between frames.\n   * @param delayValue The time in milliseconds.\n   */\n  _createClass(ToAnimatedAction, [{\n    key: \"delay\",\n    value: function delay(delayValue) {\n      this.addQualifier(new Qualifier('dl', delayValue));\n      this._actionModel.delay = delayValue;\n      return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n  }, {\n    key: \"sampling\",\n    value: function sampling(_sampling) {\n      this.addQualifier(new Qualifier('vs', _sampling));\n      this._actionModel.sampling = _sampling;\n      return this;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var animatedFormat = actionModel.animatedFormat,\n        sampling = actionModel.sampling,\n        delay = actionModel.delay;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this(animatedFormat);\n      sampling && result.sampling(sampling);\n      delay && result.delay(delay);\n      return result;\n    }\n  }]);\n  return ToAnimatedAction;\n}(Action);\nexport default ToAnimatedAction;","map":{"version":3,"names":["Action","Qualifier","animatedWebP","animated","ToAnimatedAction","animatedFormat","_actionModel","actionType","toString","addFlag","addQualifier","delayValue","delay","sampling","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/ToAnimatedAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { animatedWebP } from \"../../qualifiers/flag.js\";\nimport { animated } from \"../../qualifiers/flag.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * The resulting transformation includes format (f_format) and the animated flag (fl_animated).\n * The flag fl_awebp is added only when an animated webp is requested.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass ToAnimatedAction extends Action {\n    constructor(animatedFormat = '') {\n        super();\n        this._actionModel = { actionType: 'toAnimated' };\n        if (animatedFormat.toString() === 'webp') {\n            this.addFlag(animatedWebP());\n        }\n        this.addFlag(animated());\n        if (animatedFormat) {\n            this.addQualifier(new Qualifier('f', animatedFormat));\n        }\n        this._actionModel.animatedFormat = animatedFormat;\n    }\n    /**\n     * @description Sets the time between frames.\n     * @param delayValue The time in milliseconds.\n     */\n    delay(delayValue) {\n        this.addQualifier(new Qualifier('dl', delayValue));\n        this._actionModel.delay = delayValue;\n        return this;\n    }\n    /**\n     * @description Sets the frequency at which the video is sampled.\n     * @param sampling As a string (e.g. '2.3s'), samples one frame every 2.3 seconds.<br>As a number (e.g. 20),\n     * samples that many equally spaced frames over the duration of the video.\n     */\n    sampling(sampling) {\n        this.addQualifier(new Qualifier('vs', sampling));\n        this._actionModel.sampling = sampling;\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { animatedFormat, sampling, delay } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(animatedFormat);\n        sampling && result.sampling(sampling);\n        delay && result.delay(delay);\n        return result;\n    }\n}\nexport default ToAnimatedAction;\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMC,gBAAgB;EAAA;EAAA;EAClB,4BAAiC;IAAA;IAAA,IAArBC,cAAc,uEAAG,EAAE;IAAA;IAC3B;IACA,MAAKC,YAAY,GAAG;MAAEC,UAAU,EAAE;IAAa,CAAC;IAChD,IAAIF,cAAc,CAACG,QAAQ,EAAE,KAAK,MAAM,EAAE;MACtC,MAAKC,OAAO,CAACP,YAAY,EAAE,CAAC;IAChC;IACA,MAAKO,OAAO,CAACN,QAAQ,EAAE,CAAC;IACxB,IAAIE,cAAc,EAAE;MAChB,MAAKK,YAAY,CAAC,IAAIT,SAAS,CAAC,GAAG,EAAEI,cAAc,CAAC,CAAC;IACzD;IACA,MAAKC,YAAY,CAACD,cAAc,GAAGA,cAAc;IAAC;EACtD;EACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,eAAMM,UAAU,EAAE;MACd,IAAI,CAACD,YAAY,CAAC,IAAIT,SAAS,CAAC,IAAI,EAAEU,UAAU,CAAC,CAAC;MAClD,IAAI,CAACL,YAAY,CAACM,KAAK,GAAGD,UAAU;MACpC,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAASE,SAAQ,EAAE;MACf,IAAI,CAACH,YAAY,CAAC,IAAIT,SAAS,CAAC,IAAI,EAAEY,SAAQ,CAAC,CAAC;MAChD,IAAI,CAACP,YAAY,CAACO,QAAQ,GAAGA,SAAQ;MACrC,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,kBAAgBC,WAAW,EAAE;MACzB,IAAQT,cAAc,GAAsBS,WAAW,CAA/CT,cAAc;QAAEQ,QAAQ,GAAYC,WAAW,CAA/BD,QAAQ;QAAED,KAAK,GAAKE,WAAW,CAArBF,KAAK;MACvC;MACA;MACA,IAAMG,MAAM,GAAG,IAAI,IAAI,CAACV,cAAc,CAAC;MACvCQ,QAAQ,IAAIE,MAAM,CAACF,QAAQ,CAACA,QAAQ,CAAC;MACrCD,KAAK,IAAIG,MAAM,CAACH,KAAK,CAACA,KAAK,CAAC;MAC5B,OAAOG,MAAM;IACjB;EAAC;EAAA;AAAA,EAxC0Bf,MAAM;AA0CrC,eAAeI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}