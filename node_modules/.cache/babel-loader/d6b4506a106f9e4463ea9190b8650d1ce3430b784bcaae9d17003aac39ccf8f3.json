{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BaseSource } from \"../BaseSource.js\";\nimport { TextStyle } from \"../../textStyle.js\";\nimport { serializeCloudinaryCharacters } from \"../../../internal/utils/serializeCloudinaryCharacters.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines the common interface for all text-based sources\n */\nvar BaseTextSource = /*#__PURE__*/function (_BaseSource) {\n  _inherits(BaseTextSource, _BaseSource);\n  var _super = _createSuper(BaseTextSource);\n  function BaseTextSource(text, textStyle) {\n    var _this;\n    _classCallCheck(this, BaseTextSource);\n    _this = _super.call(this);\n    _this.type = 'text';\n    _this.text = text;\n    _this._textStyle = textStyle;\n    _this._qualifierModel.sourceType = 'text';\n    _this._qualifierModel.text = text;\n    if (textStyle instanceof TextStyle) {\n      _this._qualifierModel.textStyle = textStyle.toJson();\n    }\n    return _this;\n  }\n  _createClass(BaseTextSource, [{\n    key: \"encodeText\",\n    value: function encodeText(text) {\n      return serializeCloudinaryCharacters(text);\n    }\n  }, {\n    key: \"textColor\",\n    value: function textColor(color) {\n      this._textColor = color;\n      this._qualifierModel.textColor = color;\n      return this;\n    }\n  }, {\n    key: \"backgroundColor\",\n    value: function backgroundColor(bgColor) {\n      this._backgroundColor = bgColor;\n      this._qualifierModel.backgroundColor = bgColor;\n      return this;\n    }\n  }, {\n    key: \"textFit\",\n    value: function textFit(_textFit) {\n      this._textFit = _textFit;\n      return this;\n    }\n    /**\n     * @description\n     * Returns the opening string of the layer,\n     * This method is used internally within {@link SDK.LayerAction|LayerAction}\n     * @returns {string}\n     */\n  }, {\n    key: \"getOpenSourceString\",\n    value: function getOpenSourceString(layerType) {\n      var layerParam = [this.type, this._textStyle && this._textStyle.toString(), this.encodeText(this.text)].filter(function (a) {\n        return a;\n      }).join(':');\n      var tmpAction = new Action();\n      tmpAction.addQualifier(new Qualifier(layerType, layerParam));\n      this._textColor && tmpAction.addQualifier(new Qualifier('co', prepareColor(this._textColor)));\n      this._backgroundColor && tmpAction.addQualifier(new Qualifier('b', prepareColor(this._backgroundColor)));\n      this._textFit && tmpAction.addQualifier(this._textFit);\n      return tmpAction.toString();\n    }\n  }]);\n  return BaseTextSource;\n}(BaseSource);\nexport { BaseTextSource };","map":{"version":3,"names":["BaseSource","TextStyle","serializeCloudinaryCharacters","Action","Qualifier","prepareColor","BaseTextSource","text","textStyle","type","_textStyle","_qualifierModel","sourceType","toJson","color","_textColor","textColor","bgColor","_backgroundColor","backgroundColor","textFit","_textFit","layerType","layerParam","toString","encodeText","filter","a","join","tmpAction","addQualifier"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/source/sourceTypes/BaseTextSource.js"],"sourcesContent":["import { BaseSource } from \"../BaseSource.js\";\nimport { TextStyle } from \"../../textStyle.js\";\nimport { serializeCloudinaryCharacters } from \"../../../internal/utils/serializeCloudinaryCharacters.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseSource}\n * @description Defines the common interface for all text-based sources\n */\nclass BaseTextSource extends BaseSource {\n    constructor(text, textStyle) {\n        super();\n        this.type = 'text';\n        this.text = text;\n        this._textStyle = textStyle;\n        this._qualifierModel.sourceType = 'text';\n        this._qualifierModel.text = text;\n        if (textStyle instanceof TextStyle) {\n            this._qualifierModel.textStyle = textStyle.toJson();\n        }\n    }\n    encodeText(text) {\n        return serializeCloudinaryCharacters(text);\n    }\n    textColor(color) {\n        this._textColor = color;\n        this._qualifierModel.textColor = color;\n        return this;\n    }\n    backgroundColor(bgColor) {\n        this._backgroundColor = bgColor;\n        this._qualifierModel.backgroundColor = bgColor;\n        return this;\n    }\n    textFit(textFit) {\n        this._textFit = textFit;\n        return this;\n    }\n    /**\n     * @description\n     * Returns the opening string of the layer,\n     * This method is used internally within {@link SDK.LayerAction|LayerAction}\n     * @returns {string}\n     */\n    getOpenSourceString(layerType) {\n        const layerParam = [\n            this.type,\n            this._textStyle && this._textStyle.toString(),\n            this.encodeText(this.text)\n        ].filter((a) => a).join(':');\n        const tmpAction = new Action();\n        tmpAction.addQualifier(new Qualifier(layerType, layerParam));\n        this._textColor && tmpAction.addQualifier(new Qualifier('co', prepareColor(this._textColor)));\n        this._backgroundColor && tmpAction.addQualifier(new Qualifier('b', prepareColor(this._backgroundColor)));\n        this._textFit && tmpAction.addQualifier(this._textFit);\n        return tmpAction.toString();\n    }\n}\nexport { BaseTextSource };\n"],"mappings":";;;;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,6BAA6B,QAAQ,0DAA0D;AACxG,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,SAAS,QAAQ,0CAA0C;AACpE,SAASC,YAAY,QAAQ,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AAJA,IAKMC,cAAc;EAAA;EAAA;EAChB,wBAAYC,IAAI,EAAEC,SAAS,EAAE;IAAA;IAAA;IACzB;IACA,MAAKC,IAAI,GAAG,MAAM;IAClB,MAAKF,IAAI,GAAGA,IAAI;IAChB,MAAKG,UAAU,GAAGF,SAAS;IAC3B,MAAKG,eAAe,CAACC,UAAU,GAAG,MAAM;IACxC,MAAKD,eAAe,CAACJ,IAAI,GAAGA,IAAI;IAChC,IAAIC,SAAS,YAAYP,SAAS,EAAE;MAChC,MAAKU,eAAe,CAACH,SAAS,GAAGA,SAAS,CAACK,MAAM,EAAE;IACvD;IAAC;EACL;EAAC;IAAA;IAAA,OACD,oBAAWN,IAAI,EAAE;MACb,OAAOL,6BAA6B,CAACK,IAAI,CAAC;IAC9C;EAAC;IAAA;IAAA,OACD,mBAAUO,KAAK,EAAE;MACb,IAAI,CAACC,UAAU,GAAGD,KAAK;MACvB,IAAI,CAACH,eAAe,CAACK,SAAS,GAAGF,KAAK;MACtC,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,yBAAgBG,OAAO,EAAE;MACrB,IAAI,CAACC,gBAAgB,GAAGD,OAAO;MAC/B,IAAI,CAACN,eAAe,CAACQ,eAAe,GAAGF,OAAO;MAC9C,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,iBAAQG,QAAO,EAAE;MACb,IAAI,CAACC,QAAQ,GAAGD,QAAO;MACvB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,6BAAoBE,SAAS,EAAE;MAC3B,IAAMC,UAAU,GAAG,CACf,IAAI,CAACd,IAAI,EACT,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACc,QAAQ,EAAE,EAC7C,IAAI,CAACC,UAAU,CAAC,IAAI,CAAClB,IAAI,CAAC,CAC7B,CAACmB,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC;MAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MAC5B,IAAMC,SAAS,GAAG,IAAI1B,MAAM,EAAE;MAC9B0B,SAAS,CAACC,YAAY,CAAC,IAAI1B,SAAS,CAACkB,SAAS,EAAEC,UAAU,CAAC,CAAC;MAC5D,IAAI,CAACR,UAAU,IAAIc,SAAS,CAACC,YAAY,CAAC,IAAI1B,SAAS,CAAC,IAAI,EAAEC,YAAY,CAAC,IAAI,CAACU,UAAU,CAAC,CAAC,CAAC;MAC7F,IAAI,CAACG,gBAAgB,IAAIW,SAAS,CAACC,YAAY,CAAC,IAAI1B,SAAS,CAAC,GAAG,EAAEC,YAAY,CAAC,IAAI,CAACa,gBAAgB,CAAC,CAAC,CAAC;MACxG,IAAI,CAACG,QAAQ,IAAIQ,SAAS,CAACC,YAAY,CAAC,IAAI,CAACT,QAAQ,CAAC;MACtD,OAAOQ,SAAS,CAACL,QAAQ,EAAE;IAC/B;EAAC;EAAA;AAAA,EA/CwBxB,UAAU;AAiDvC,SAASM,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}