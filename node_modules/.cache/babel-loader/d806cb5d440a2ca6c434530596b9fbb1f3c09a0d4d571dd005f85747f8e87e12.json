{"ast":null,"code":"import _slicedToArray from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { BlendModeQualifier } from \"../../qualifiers/blendMode/BlendModeQualifier.js\";\nimport { FlagQualifier } from \"../../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { createSourceFromModel } from \"../../internal/models/createSourceFromModel.js\";\nimport { createPositionFromModel } from \"../../internal/models/createPositionFromModel.js\";\nimport { createTimelinePositionFromModel } from \"../../internal/models/createTimelinePositionFromModel.js\";\nimport { ACTION_TYPE_TO_BLEND_MODE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @extends SDK.Action\n * @memberOf SDK\n * @description\n * A generic Layer action that can add a Video, Text or Image layer.<br>\n * This class can represent an overlay or an underlay.\n */\nvar LayerAction = /*#__PURE__*/function (_Action) {\n  _inherits(LayerAction, _Action);\n  var _super = _createSuper(LayerAction);\n  /**\n   * @description Creates a LayerAction to be used with overlays and underlays\n   * @param {ImageSource | TextSource | VideoSource} layerSource The Source used for the layer, use the builders provided {@link Qualifiers.Source|here}\n   */\n  function LayerAction(layerSource) {\n    var _this;\n    _classCallCheck(this, LayerAction);\n    _this = _super.call(this);\n    _this.source = layerSource;\n    _this._actionModel = {\n      actionType: 'overlay',\n      source: layerSource.toJson()\n    };\n    return _this;\n  }\n  /**\n   * @description Sets the layerType to 'u' (underlay) or 'l' (overlay).\n   * @param {'u' | 'l'} type\n   * @return {this}\n   */\n  _createClass(LayerAction, [{\n    key: \"setLayerType\",\n    value: function setLayerType(type) {\n      this.layerType = type;\n      this._actionModel.actionType = type === 'u' ? 'underlay' : 'overlay';\n      return this;\n    }\n    /**\n     * @description Sets the timeline position of the video layer\n     * @param {Qualifiers.TimelinePosition} timelinePosition\n     * @return {this}\n     */\n  }, {\n    key: \"timeline\",\n    value: function timeline(timelinePosition) {\n      this._timelinePosition = timelinePosition;\n      this._actionModel.timelinePosition = timelinePosition.toJson();\n      return this;\n    }\n    /**\n     * @description Sets the position of the layer\n     * @param {Qualifiers.Position} position\n     * @return {this}\n     */\n  }, {\n    key: \"position\",\n    value: function position(_position) {\n      this._position = _position;\n      this._actionModel.position = _position.toJson();\n      return this;\n    }\n    /**\n     * @description Specifies how to blend the image overlay with the base overlay\n     * @param {Qualifiers.BlendMode|BlendModeType} blendMode\n     * @return {this}\n     */\n  }, {\n    key: \"blendMode\",\n    value: function blendMode(_blendMode) {\n      this._blendMode = _blendMode;\n      var _replace$split = \"\".concat(_blendMode).replace('e_', '').split(\":\"),\n        _replace$split2 = _slicedToArray(_replace$split, 2),\n        mode = _replace$split2[0],\n        level = _replace$split2[1];\n      if (mode === 'anti_removal') {\n        this._actionModel.blendMode = level ? {\n          blendModeType: 'antiRemoval',\n          level: level\n        } : {\n          blendModeType: 'antiRemoval'\n        };\n      } else {\n        this._actionModel.blendMode = {\n          blendModeType: mode\n        };\n      }\n      return this;\n    }\n    /**\n     * @private\n     * @description\n     * Closes a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return {SDK.Action}\n     */\n  }, {\n    key: \"closeLayer\",\n    value: function closeLayer() {\n      var _a, _b, _c, _d;\n      var bit = new Action().addFlag(new FlagQualifier('layer_apply'));\n      (_a = this._position) === null || _a === void 0 ? void 0 : _a.qualifiers.forEach(function (qualifier) {\n        bit.addQualifier(qualifier);\n      });\n      // Flags are stored separately from qualifiers, we need to add those as well\n      (_b = this._position) === null || _b === void 0 ? void 0 : _b.flags.forEach(function (flag) {\n        bit.addFlag(flag);\n      });\n      if (typeof this._blendMode === \"string\") {\n        bit.addQualifier(new Qualifier('e', this._blendMode));\n      } else {\n        (_c = this._blendMode) === null || _c === void 0 ? void 0 : _c.qualifiers.forEach(function (qualifier) {\n          bit.addQualifier(qualifier);\n        });\n      }\n      (_d = this._timelinePosition) === null || _d === void 0 ? void 0 : _d.qualifiers.forEach(function (qualifier) {\n        bit.addQualifier(qualifier);\n      });\n      return bit;\n    }\n    /**\n     * @private\n     * @description\n     * Opens a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return string\n     */\n  }, {\n    key: \"openLayer\",\n    value: function openLayer() {\n      return \"\".concat(this.source.getOpenSourceString(this.layerType));\n    }\n    /**\n     * @description\n     * Serializes the Layer to a string\n     * @return {string}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return [this.openLayer(), this.source.getTransformation() && this.source.getTransformation().toString(), this.closeLayer()].filter(function (a) {\n        return a;\n      }).join('/');\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel, transformationFromJson) {\n      var source = actionModel.source,\n        actionType = actionModel.actionType,\n        position = actionModel.position,\n        timelinePosition = actionModel.timelinePosition,\n        blendMode = actionModel.blendMode;\n      var sourceInstance = createSourceFromModel(source, transformationFromJson);\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this(sourceInstance);\n      var layerType = actionType === 'overlay' ? 'l' : 'u';\n      result.setLayerType(layerType);\n      if (position) {\n        result.position(createPositionFromModel(position));\n      }\n      if (timelinePosition) {\n        result.timeline(createTimelinePositionFromModel(timelinePosition));\n      }\n      if (blendMode) {\n        var blendModeType = ACTION_TYPE_TO_BLEND_MODE_MAP[blendMode.blendModeType] || blendMode.blendModeType;\n        if (blendMode === null || blendMode === void 0 ? void 0 : blendMode.level) {\n          result.blendMode(new BlendModeQualifier(blendModeType, blendMode.level));\n        } else {\n          result.blendMode(new BlendModeQualifier(blendModeType));\n        }\n      }\n      return result;\n    }\n  }]);\n  return LayerAction;\n}(Action);\nexport { LayerAction };","map":{"version":3,"names":["Action","BlendModeQualifier","FlagQualifier","Qualifier","createSourceFromModel","createPositionFromModel","createTimelinePositionFromModel","ACTION_TYPE_TO_BLEND_MODE_MAP","LayerAction","layerSource","source","_actionModel","actionType","toJson","type","layerType","timelinePosition","_timelinePosition","position","_position","blendMode","_blendMode","replace","split","mode","level","blendModeType","_a","_b","_c","_d","bit","addFlag","qualifiers","forEach","qualifier","addQualifier","flags","flag","getOpenSourceString","openLayer","getTransformation","toString","closeLayer","filter","a","join","actionModel","transformationFromJson","sourceInstance","result","setLayerType","timeline"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/layer/LayerAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { BlendModeQualifier } from \"../../qualifiers/blendMode/BlendModeQualifier.js\";\nimport { FlagQualifier } from \"../../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { createSourceFromModel } from \"../../internal/models/createSourceFromModel.js\";\nimport { createPositionFromModel } from \"../../internal/models/createPositionFromModel.js\";\nimport { createTimelinePositionFromModel } from \"../../internal/models/createTimelinePositionFromModel.js\";\nimport { ACTION_TYPE_TO_BLEND_MODE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @extends SDK.Action\n * @memberOf SDK\n * @description\n * A generic Layer action that can add a Video, Text or Image layer.<br>\n * This class can represent an overlay or an underlay.\n */\nclass LayerAction extends Action {\n    /**\n     * @description Creates a LayerAction to be used with overlays and underlays\n     * @param {ImageSource | TextSource | VideoSource} layerSource The Source used for the layer, use the builders provided {@link Qualifiers.Source|here}\n     */\n    constructor(layerSource) {\n        super();\n        this.source = layerSource;\n        this._actionModel = {\n            actionType: 'overlay',\n            source: layerSource.toJson()\n        };\n    }\n    /**\n     * @description Sets the layerType to 'u' (underlay) or 'l' (overlay).\n     * @param {'u' | 'l'} type\n     * @return {this}\n     */\n    setLayerType(type) {\n        this.layerType = type;\n        this._actionModel.actionType = type === 'u' ? 'underlay' : 'overlay';\n        return this;\n    }\n    /**\n     * @description Sets the timeline position of the video layer\n     * @param {Qualifiers.TimelinePosition} timelinePosition\n     * @return {this}\n     */\n    timeline(timelinePosition) {\n        this._timelinePosition = timelinePosition;\n        this._actionModel.timelinePosition = timelinePosition.toJson();\n        return this;\n    }\n    /**\n     * @description Sets the position of the layer\n     * @param {Qualifiers.Position} position\n     * @return {this}\n     */\n    position(position) {\n        this._position = position;\n        this._actionModel.position = position.toJson();\n        return this;\n    }\n    /**\n     * @description Specifies how to blend the image overlay with the base overlay\n     * @param {Qualifiers.BlendMode|BlendModeType} blendMode\n     * @return {this}\n     */\n    blendMode(blendMode) {\n        this._blendMode = blendMode;\n        const [mode, level] = `${blendMode}`.replace('e_', '').split(\":\");\n        if (mode === 'anti_removal') {\n            this._actionModel.blendMode = level ? { blendModeType: 'antiRemoval', level: level } : { blendModeType: 'antiRemoval' };\n        }\n        else {\n            this._actionModel.blendMode = { blendModeType: mode };\n        }\n        return this;\n    }\n    /**\n     * @private\n     * @description\n     * Closes a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return {SDK.Action}\n     */\n    closeLayer() {\n        var _a, _b, _c, _d;\n        const bit = new Action().addFlag(new FlagQualifier('layer_apply'));\n        (_a = this._position) === null || _a === void 0 ? void 0 : _a.qualifiers.forEach((qualifier) => {\n            bit.addQualifier(qualifier);\n        });\n        // Flags are stored separately from qualifiers, we need to add those as well\n        (_b = this._position) === null || _b === void 0 ? void 0 : _b.flags.forEach((flag) => {\n            bit.addFlag(flag);\n        });\n        if (typeof this._blendMode === \"string\") {\n            bit.addQualifier(new Qualifier('e', this._blendMode));\n        }\n        else {\n            (_c = this._blendMode) === null || _c === void 0 ? void 0 : _c.qualifiers.forEach((qualifier) => {\n                bit.addQualifier(qualifier);\n            });\n        }\n        (_d = this._timelinePosition) === null || _d === void 0 ? void 0 : _d.qualifiers.forEach((qualifier) => {\n            bit.addQualifier(qualifier);\n        });\n        return bit;\n    }\n    /**\n     * @private\n     * @description\n     * Opens a layer (layers are built in three stages -> /Open/Transform/Close).\n     * @return string\n     */\n    openLayer() {\n        return `${this.source.getOpenSourceString(this.layerType)}`;\n    }\n    /**\n     * @description\n     * Serializes the Layer to a string\n     * @return {string}\n     */\n    toString() {\n        return [\n            this.openLayer(),\n            this.source.getTransformation() && this.source.getTransformation().toString(),\n            this.closeLayer()\n        ].filter((a) => a).join('/');\n    }\n    static fromJson(actionModel, transformationFromJson) {\n        const { source, actionType, position, timelinePosition, blendMode } = actionModel;\n        const sourceInstance = createSourceFromModel(source, transformationFromJson);\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(sourceInstance);\n        const layerType = actionType === 'overlay' ? 'l' : 'u';\n        result.setLayerType(layerType);\n        if (position) {\n            result.position(createPositionFromModel(position));\n        }\n        if (timelinePosition) {\n            result.timeline(createTimelinePositionFromModel(timelinePosition));\n        }\n        if (blendMode) {\n            const blendModeType = ACTION_TYPE_TO_BLEND_MODE_MAP[blendMode.blendModeType] || blendMode.blendModeType;\n            if (blendMode === null || blendMode === void 0 ? void 0 : blendMode.level) {\n                result.blendMode(new BlendModeQualifier(blendModeType, blendMode.level));\n            }\n            else {\n                result.blendMode(new BlendModeQualifier(blendModeType));\n            }\n        }\n        return result;\n    }\n}\nexport { LayerAction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}