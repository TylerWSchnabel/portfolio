{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nvar FetchLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(FetchLayer, _Layer);\n  var _super = _createSuper(FetchLayer);\n  /**\n   * @class FetchLayer\n   * @classdesc Creates an image layer using a remote URL.\n   * @param {Object|string} options - layer parameters or a url\n   * @param {string} options.url the url of the image to fetch\n   */\n  function FetchLayer(options) {\n    var _this;\n    _classCallCheck(this, FetchLayer);\n    _this = _super.call(this, options);\n    if (isString(options)) {\n      _this.options.url = options;\n    } else if (options != null ? options.url : void 0) {\n      _this.options.url = options.url;\n    }\n    return _this;\n  }\n  _createClass(FetchLayer, [{\n    key: \"url\",\n    value: function url(_url) {\n      this.options.url = _url;\n      return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function FetchLayer#toString\n     * @return {String}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"fetch:\".concat(base64Encode(this.options.url));\n    }\n  }]);\n  return FetchLayer;\n}(Layer);\nexport default FetchLayer;","map":{"version":3,"names":["Layer","isString","base64Encode","FetchLayer","options","url"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js"],"sourcesContent":["import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nclass FetchLayer extends Layer {\n    /**\n     * @class FetchLayer\n     * @classdesc Creates an image layer using a remote URL.\n     * @param {Object|string} options - layer parameters or a url\n     * @param {string} options.url the url of the image to fetch\n     */\n    constructor(options) {\n        super(options);\n        if (isString(options)) {\n            this.options.url = options;\n        }\n        else if (options != null ? options.url : void 0) {\n            this.options.url = options.url;\n        }\n    }\n    url(url) {\n        this.options.url = url;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function FetchLayer#toString\n     * @return {String}\n     */\n    toString() {\n        return `fetch:${base64Encode(this.options.url)}`;\n    }\n}\nexport default FetchLayer;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,YAAY;AAC9B,SAASC,QAAQ,QAAQ,4CAA4C;AACrE,SAASC,YAAY,QAAQ,sCAAsC;AAAC,IAC9DC,UAAU;EAAA;EAAA;EACZ;AACJ;AACA;AACA;AACA;AACA;EACI,oBAAYC,OAAO,EAAE;IAAA;IAAA;IACjB,0BAAMA,OAAO;IACb,IAAIH,QAAQ,CAACG,OAAO,CAAC,EAAE;MACnB,MAAKA,OAAO,CAACC,GAAG,GAAGD,OAAO;IAC9B,CAAC,MACI,IAAIA,OAAO,IAAI,IAAI,GAAGA,OAAO,CAACC,GAAG,GAAG,KAAK,CAAC,EAAE;MAC7C,MAAKD,OAAO,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG;IAClC;IAAC;EACL;EAAC;IAAA;IAAA,OACD,aAAIA,IAAG,EAAE;MACL,IAAI,CAACD,OAAO,CAACC,GAAG,GAAGA,IAAG;MACtB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAW;MACP,uBAAgBH,YAAY,CAAC,IAAI,CAACE,OAAO,CAACC,GAAG,CAAC;IAClD;EAAC;EAAA;AAAA,EA3BoBL,KAAK;AA6B9B,eAAeG,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}