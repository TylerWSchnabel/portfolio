{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { lossy as _lossy, preserveTransparency as _preserveTransparency, progressive as _progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nvar DeliveryFormatAction = /*#__PURE__*/function (_DeliveryAction) {\n  _inherits(DeliveryFormatAction, _DeliveryAction);\n  var _super = _createSuper(DeliveryFormatAction);\n  function DeliveryFormatAction(deliveryKey, deliveryType) {\n    _classCallCheck(this, DeliveryFormatAction);\n    return _super.call(this, deliveryKey, deliveryType, 'formatType');\n  }\n  /**\n   * @description Uses lossy compression when delivering animated GIF files.\n   * @return {this}\n   */\n  _createClass(DeliveryFormatAction, [{\n    key: \"lossy\",\n    value: function lossy() {\n      this._actionModel.lossy = true;\n      this.addFlag(_lossy());\n      return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n  }, {\n    key: \"progressive\",\n    value: function progressive(mode) {\n      if (mode instanceof ProgressiveQualifier) {\n        this._actionModel.progressive = {\n          mode: mode.getFlagValue()\n        };\n        this.addFlag(mode);\n      } else {\n        this._actionModel.progressive = {\n          mode: mode\n        };\n        this.addFlag(_progressive(mode));\n      }\n      return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n  }, {\n    key: \"preserveTransparency\",\n    value: function preserveTransparency() {\n      this._actionModel.preserveTransparency = true;\n      this.addFlag(_preserveTransparency());\n      return this;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var formatType = actionModel.formatType,\n        lossy = actionModel.lossy,\n        progressive = actionModel.progressive,\n        preserveTransparency = actionModel.preserveTransparency;\n      var result;\n      if (formatType) {\n        result = new this('f', formatType);\n      } else {\n        result = new this('f');\n      }\n      if (progressive) {\n        if (progressive.mode) {\n          result.progressive(progressive.mode);\n        } else {\n          result.progressive();\n        }\n      }\n      lossy && result.lossy();\n      preserveTransparency && result.preserveTransparency();\n      return result;\n    }\n  }]);\n  return DeliveryFormatAction;\n}(DeliveryAction);\nexport { DeliveryFormatAction };","map":{"version":3,"names":["lossy","preserveTransparency","progressive","DeliveryAction","ProgressiveQualifier","DeliveryFormatAction","deliveryKey","deliveryType","_actionModel","addFlag","mode","getFlagValue","actionModel","formatType","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js"],"sourcesContent":["import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n"],"mappings":";;;;AAAA,SAASA,KAAK,IAALA,MAAK,EAAEC,oBAAoB,IAApBA,qBAAoB,EAAEC,WAAW,IAAXA,YAAW,QAAQ,0BAA0B;AACnF,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE;AACA;AACA;AACA;AACA;AAJA,IAKMC,oBAAoB;EAAA;EAAA;EACtB,8BAAYC,WAAW,EAAEC,YAAY,EAAE;IAAA;IAAA,yBAC7BD,WAAW,EAAEC,YAAY,EAAE,YAAY;EACjD;EACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,iBAAQ;MACJ,IAAI,CAACC,YAAY,CAACR,KAAK,GAAG,IAAI;MAC9B,IAAI,CAACS,OAAO,CAACT,MAAK,EAAE,CAAC;MACrB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,qBAAYU,IAAI,EAAE;MACd,IAAIA,IAAI,YAAYN,oBAAoB,EAAE;QACtC,IAAI,CAACI,YAAY,CAACN,WAAW,GAAG;UAAEQ,IAAI,EAAEA,IAAI,CAACC,YAAY;QAAG,CAAC;QAC7D,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;MACtB,CAAC,MACI;QACD,IAAI,CAACF,YAAY,CAACN,WAAW,GAAG;UAAEQ,IAAI,EAAEA;QAAK,CAAC;QAC9C,IAAI,CAACD,OAAO,CAACP,YAAW,CAACQ,IAAI,CAAC,CAAC;MACnC;MACA,OAAO,IAAI;IACf;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,gCAAuB;MACnB,IAAI,CAACF,YAAY,CAACP,oBAAoB,GAAG,IAAI;MAC7C,IAAI,CAACQ,OAAO,CAACR,qBAAoB,EAAE,CAAC;MACpC,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,kBAAgBW,WAAW,EAAE;MACzB,IAAQC,UAAU,GAA+CD,WAAW,CAApEC,UAAU;QAAEb,KAAK,GAAwCY,WAAW,CAAxDZ,KAAK;QAAEE,WAAW,GAA2BU,WAAW,CAAjDV,WAAW;QAAED,oBAAoB,GAAKW,WAAW,CAApCX,oBAAoB;MAC5D,IAAIa,MAAM;MACV,IAAID,UAAU,EAAE;QACZC,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,EAAED,UAAU,CAAC;MACtC,CAAC,MACI;QACDC,MAAM,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;MAC1B;MACA,IAAIZ,WAAW,EAAE;QACb,IAAIA,WAAW,CAACQ,IAAI,EAAE;UAClBI,MAAM,CAACZ,WAAW,CAACA,WAAW,CAACQ,IAAI,CAAC;QACxC,CAAC,MACI;UACDI,MAAM,CAACZ,WAAW,EAAE;QACxB;MACJ;MACAF,KAAK,IAAIc,MAAM,CAACd,KAAK,EAAE;MACvBC,oBAAoB,IAAIa,MAAM,CAACb,oBAAoB,EAAE;MACrD,OAAOa,MAAM;IACjB;EAAC;EAAA;AAAA,EAxD8BX,cAAc;AA0DjD,SAASE,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}