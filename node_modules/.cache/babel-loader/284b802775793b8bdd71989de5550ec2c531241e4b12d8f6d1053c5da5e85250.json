{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { snakeCase } from \"../utils/snakeCase.js\";\nvar Layer = /*#__PURE__*/function () {\n  /**\n   * Layer\n   * @constructor Layer\n   * @param {Object} options - layer parameters\n   */\n  function Layer(options) {\n    var _this = this;\n    _classCallCheck(this, Layer);\n    this.options = {};\n    if (options != null) {\n      [\"resourceType\", \"type\", \"publicId\", \"format\"].forEach(function (key) {\n        var ref;\n        // @ts-ignore\n        return _this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n      });\n    }\n  }\n  _createClass(Layer, [{\n    key: \"resourceType\",\n    value: function resourceType(value) {\n      this.options.resourceType = value;\n      return this;\n    }\n  }, {\n    key: \"type\",\n    value: function type(value) {\n      this.options.type = value;\n      return this;\n    }\n  }, {\n    key: \"publicId\",\n    value: function publicId(value) {\n      this.options.publicId = value;\n      return this;\n    }\n    /**\n     * Get the public ID, formatted for layer parameter\n     * @function Layer#getPublicId\n     * @return {String} public ID\n     */\n  }, {\n    key: \"getPublicId\",\n    value: function getPublicId() {\n      var ref;\n      return (ref = this.options.publicId) != null ? ref.replace(/\\//g, \":\") : void 0;\n    }\n    /**\n     * Get the public ID, with format if present\n     * @function Layer#getFullPublicId\n     * @return {String} public ID\n     */\n  }, {\n    key: \"getFullPublicId\",\n    value: function getFullPublicId() {\n      if (this.options.format != null) {\n        return this.getPublicId() + \".\" + this.options.format;\n      } else {\n        return this.getPublicId();\n      }\n    }\n  }, {\n    key: \"format\",\n    value: function format(value) {\n      this.options.format = value;\n      return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function Layer#toString\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var components = [];\n      if (this.options.publicId == null) {\n        throw \"Must supply publicId\";\n      }\n      if (!(this.options.resourceType === \"image\")) {\n        components.push(this.options.resourceType);\n      }\n      if (!(this.options.type === \"upload\")) {\n        components.push(this.options.type);\n      }\n      components.push(this.getFullPublicId());\n      return components.filter(function (x) {\n        return !!x;\n      }).join(\":\");\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Layer(this.options);\n    }\n  }]);\n  return Layer;\n}();\nexport default Layer;","map":{"version":3,"names":["snakeCase","Layer","options","forEach","key","ref","value","resourceType","type","publicId","replace","format","getPublicId","components","push","getFullPublicId","filter","x","join"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/backwards/legacyLayer/layer.js"],"sourcesContent":["import { snakeCase } from \"../utils/snakeCase.js\";\nclass Layer {\n    /**\n     * Layer\n     * @constructor Layer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        this.options = {};\n        if (options != null) {\n            [\"resourceType\", \"type\", \"publicId\", \"format\"].forEach((key) => {\n                var ref;\n                // @ts-ignore\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n            });\n        }\n    }\n    resourceType(value) {\n        this.options.resourceType = value;\n        return this;\n    }\n    type(value) {\n        this.options.type = value;\n        return this;\n    }\n    publicId(value) {\n        this.options.publicId = value;\n        return this;\n    }\n    /**\n     * Get the public ID, formatted for layer parameter\n     * @function Layer#getPublicId\n     * @return {String} public ID\n     */\n    getPublicId() {\n        var ref;\n        return (ref = this.options.publicId) != null ? ref.replace(/\\//g, \":\") : void 0;\n    }\n    /**\n     * Get the public ID, with format if present\n     * @function Layer#getFullPublicId\n     * @return {String} public ID\n     */\n    getFullPublicId() {\n        if (this.options.format != null) {\n            return this.getPublicId() + \".\" + this.options.format;\n        }\n        else {\n            return this.getPublicId();\n        }\n    }\n    format(value) {\n        this.options.format = value;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function Layer#toString\n     */\n    toString() {\n        let components = [];\n        if (this.options.publicId == null) {\n            throw \"Must supply publicId\";\n        }\n        if (!(this.options.resourceType === \"image\")) {\n            components.push(this.options.resourceType);\n        }\n        if (!(this.options.type === \"upload\")) {\n            components.push(this.options.type);\n        }\n        components.push(this.getFullPublicId());\n        return components.filter(x => !!x).join(\":\");\n    }\n    clone() {\n        return new Layer(this.options);\n    }\n}\nexport default Layer;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,uBAAuB;AAAC,IAC5CC,KAAK;EACP;AACJ;AACA;AACA;AACA;EACI,eAAYC,OAAO,EAAE;IAAA;IAAA;IACjB,IAAI,CAACA,OAAO,GAAG,CAAC,CAAC;IACjB,IAAIA,OAAO,IAAI,IAAI,EAAE;MACjB,CAAC,cAAc,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;QAC5D,IAAIC,GAAG;QACP;QACA,OAAO,KAAI,CAACH,OAAO,CAACE,GAAG,CAAC,GAAG,CAACC,GAAG,GAAGH,OAAO,CAACE,GAAG,CAAC,KAAK,IAAI,GAAGC,GAAG,GAAGH,OAAO,CAACF,SAAS,CAACI,GAAG,CAAC,CAAC;MAC3F,CAAC,CAAC;IACN;EACJ;EAAC;IAAA;IAAA,OACD,sBAAaE,KAAK,EAAE;MAChB,IAAI,CAACJ,OAAO,CAACK,YAAY,GAAGD,KAAK;MACjC,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,cAAKA,KAAK,EAAE;MACR,IAAI,CAACJ,OAAO,CAACM,IAAI,GAAGF,KAAK;MACzB,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,kBAASA,KAAK,EAAE;MACZ,IAAI,CAACJ,OAAO,CAACO,QAAQ,GAAGH,KAAK;MAC7B,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,uBAAc;MACV,IAAID,GAAG;MACP,OAAO,CAACA,GAAG,GAAG,IAAI,CAACH,OAAO,CAACO,QAAQ,KAAK,IAAI,GAAGJ,GAAG,CAACK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;IACnF;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,2BAAkB;MACd,IAAI,IAAI,CAACR,OAAO,CAACS,MAAM,IAAI,IAAI,EAAE;QAC7B,OAAO,IAAI,CAACC,WAAW,EAAE,GAAG,GAAG,GAAG,IAAI,CAACV,OAAO,CAACS,MAAM;MACzD,CAAC,MACI;QACD,OAAO,IAAI,CAACC,WAAW,EAAE;MAC7B;IACJ;EAAC;IAAA;IAAA,OACD,gBAAON,KAAK,EAAE;MACV,IAAI,CAACJ,OAAO,CAACS,MAAM,GAAGL,KAAK;MAC3B,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,oBAAW;MACP,IAAIO,UAAU,GAAG,EAAE;MACnB,IAAI,IAAI,CAACX,OAAO,CAACO,QAAQ,IAAI,IAAI,EAAE;QAC/B,MAAM,sBAAsB;MAChC;MACA,IAAI,EAAE,IAAI,CAACP,OAAO,CAACK,YAAY,KAAK,OAAO,CAAC,EAAE;QAC1CM,UAAU,CAACC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACK,YAAY,CAAC;MAC9C;MACA,IAAI,EAAE,IAAI,CAACL,OAAO,CAACM,IAAI,KAAK,QAAQ,CAAC,EAAE;QACnCK,UAAU,CAACC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACM,IAAI,CAAC;MACtC;MACAK,UAAU,CAACC,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE,CAAC;MACvC,OAAOF,UAAU,CAACG,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAI,CAAC,CAACA,CAAC;MAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAChD;EAAC;IAAA;IAAA,OACD,iBAAQ;MACJ,OAAO,IAAIjB,KAAK,CAAC,IAAI,CAACC,OAAO,CAAC;IAClC;EAAC;EAAA;AAAA;AAEL,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}