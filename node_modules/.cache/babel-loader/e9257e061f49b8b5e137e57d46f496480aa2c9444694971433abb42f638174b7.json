{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nvar FPSRangeAction = /*#__PURE__*/function (_Action) {\n  _inherits(FPSRangeAction, _Action);\n  var _super = _createSuper(FPSRangeAction);\n  function FPSRangeAction(from, to) {\n    var _this;\n    _classCallCheck(this, FPSRangeAction);\n    _this = _super.call(this);\n    _this._actionModel = {};\n    _this.from = from;\n    _this._actionModel = {\n      actionType: 'fps',\n      fps: {\n        from: from\n      }\n    };\n    if (to != null) {\n      _this.to = to;\n      _this._actionModel.fps.to = to;\n    }\n    return _this;\n  }\n  _createClass(FPSRangeAction, [{\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue;\n      if (this.from && this.to) {\n        qualifierValue = new QualifierValue(\"\".concat(this.from, \"-\").concat(this.to));\n      } else {\n        qualifierValue = new QualifierValue(\"\".concat(this.from, \"-\"));\n      }\n      this.addQualifier(new Qualifier('fps', qualifierValue));\n      return this;\n    }\n  }]);\n  return FPSRangeAction;\n}(Action);\nexport default FPSRangeAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","FPSRangeAction","from","to","_actionModel","actionType","fps","qualifierValue","addQualifier"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/transcode/FPSRangeAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Controls the range of acceptable FPS (Frames Per Second) to ensure that video (even when optimized)\n * is delivered with\n * an expected FPS level (helps with sync to audio).\n *\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/video_transformation_reference#video_settings|Video settings}\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass FPSRangeAction extends Action {\n    constructor(from, to) {\n        super();\n        this._actionModel = {};\n        this.from = from;\n        this._actionModel = {\n            actionType: 'fps',\n            fps: { from }\n        };\n        if (to != null) {\n            this.to = to;\n            this._actionModel.fps.to = to;\n        }\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (this.from && this.to) {\n            qualifierValue = new QualifierValue(`${this.from}-${this.to}`);\n        }\n        else {\n            qualifierValue = new QualifierValue(`${this.from}-`);\n        }\n        this.addQualifier(new Qualifier('fps', qualifierValue));\n        return this;\n    }\n}\nexport default FPSRangeAction;\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAUMC,cAAc;EAAA;EAAA;EAChB,wBAAYC,IAAI,EAAEC,EAAE,EAAE;IAAA;IAAA;IAClB;IACA,MAAKC,YAAY,GAAG,CAAC,CAAC;IACtB,MAAKF,IAAI,GAAGA,IAAI;IAChB,MAAKE,YAAY,GAAG;MAChBC,UAAU,EAAE,KAAK;MACjBC,GAAG,EAAE;QAAEJ,IAAI,EAAJA;MAAK;IAChB,CAAC;IACD,IAAIC,EAAE,IAAI,IAAI,EAAE;MACZ,MAAKA,EAAE,GAAGA,EAAE;MACZ,MAAKC,YAAY,CAACE,GAAG,CAACH,EAAE,GAAGA,EAAE;IACjC;IAAC;EACL;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAII,cAAc;MAClB,IAAI,IAAI,CAACL,IAAI,IAAI,IAAI,CAACC,EAAE,EAAE;QACtBI,cAAc,GAAG,IAAIP,cAAc,WAAI,IAAI,CAACE,IAAI,cAAI,IAAI,CAACC,EAAE,EAAG;MAClE,CAAC,MACI;QACDI,cAAc,GAAG,IAAIP,cAAc,WAAI,IAAI,CAACE,IAAI,OAAI;MACxD;MACA,IAAI,CAACM,YAAY,CAAC,IAAIT,SAAS,CAAC,KAAK,EAAEQ,cAAc,CAAC,CAAC;MACvD,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAxBwBT,MAAM;AA0BnC,eAAeG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}