{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar EffectOutline = /*#__PURE__*/function (_Action) {\n  _inherits(EffectOutline, _Action);\n  var _super = _createSuper(EffectOutline);\n  function EffectOutline() {\n    var _this;\n    _classCallCheck(this, EffectOutline);\n    _this = _super.call(this);\n    _this._actionModel = {};\n    _this._actionModel.actionType = 'outline';\n    return _this;\n  }\n  /**\n   * @description\n   * How to apply the outline effect which can be one of the following values:\n   * inner, inner_fill, outer, fill.\n   * @param {OutlineModeType|string} mode  The type of outline effect. Use the constants defined in Outline.\n   * @return {this}\n   */\n  _createClass(EffectOutline, [{\n    key: \"mode\",\n    value: function mode(_mode) {\n      this._actionModel.mode = _mode;\n      this._mode = _mode;\n      return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n  }, {\n    key: \"width\",\n    value: function width(_width) {\n      this._actionModel.width = _width;\n      this._width = _width;\n      return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n  }, {\n    key: \"blurLevel\",\n    value: function blurLevel(lvl) {\n      this._actionModel.blurLevel = lvl;\n      this._blurLevel = lvl;\n      return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n  }, {\n    key: \"color\",\n    value: function color(_color) {\n      this._actionModel.color = _color;\n      return this.addQualifier(new Qualifier('co', prepareColor(_color)));\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var actionType = actionModel.actionType,\n        mode = actionModel.mode,\n        color = actionModel.color,\n        blurLevel = actionModel.blurLevel,\n        width = actionModel.width;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this();\n      mode && result.mode(mode);\n      color && result.color(color);\n      blurLevel && result.blurLevel(blurLevel);\n      width && result.width(width);\n      return result;\n    }\n  }]);\n  return EffectOutline;\n}(Action);\nexport { EffectOutline };","map":{"version":3,"names":["Action","QualifierValue","Qualifier","prepareColor","EffectOutline","_actionModel","actionType","mode","_mode","width","_width","lvl","blurLevel","_blurLevel","color","addQualifier","setDelimiter","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Outline.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'outline';\n    }\n    /**\n     * @description\n     * How to apply the outline effect which can be one of the following values:\n     * inner, inner_fill, outer, fill.\n     * @param {OutlineModeType|string} mode  The type of outline effect. Use the constants defined in Outline.\n     * @return {this}\n     */\n    mode(mode) {\n        this._actionModel.mode = mode;\n        this._mode = mode;\n        return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n    width(width) {\n        this._actionModel.width = width;\n        this._width = width;\n        return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n    blurLevel(lvl) {\n        this._actionModel.blurLevel = lvl;\n        this._blurLevel = lvl;\n        return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n    color(color) {\n        this._actionModel.color = color;\n        return this.addQualifier(new Qualifier('co', prepareColor(color)));\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n    static fromJson(actionModel) {\n        const { actionType, mode, color, blurLevel, width } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        mode && result.mode(mode);\n        color && result.color(color);\n        blurLevel && result.blurLevel(blurLevel);\n        width && result.width(width);\n        return result;\n    }\n}\nexport { EffectOutline };\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,YAAY,QAAQ,sCAAsC;AACnE;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,aAAa;EAAA;EAAA;EACf,yBAAc;IAAA;IAAA;IACV;IACA,MAAKC,YAAY,GAAG,CAAC,CAAC;IACtB,MAAKA,YAAY,CAACC,UAAU,GAAG,SAAS;IAAC;EAC7C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,cAAKC,KAAI,EAAE;MACP,IAAI,CAACF,YAAY,CAACE,IAAI,GAAGA,KAAI;MAC7B,IAAI,CAACC,KAAK,GAAGD,KAAI;MACjB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,eAAME,MAAK,EAAE;MACT,IAAI,CAACJ,YAAY,CAACI,KAAK,GAAGA,MAAK;MAC/B,IAAI,CAACC,MAAM,GAAGD,MAAK;MACnB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,mBAAUE,GAAG,EAAE;MACX,IAAI,CAACN,YAAY,CAACO,SAAS,GAAGD,GAAG;MACjC,IAAI,CAACE,UAAU,GAAGF,GAAG;MACrB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,eAAMG,MAAK,EAAE;MACT,IAAI,CAACT,YAAY,CAACS,KAAK,GAAGA,MAAK;MAC/B,OAAO,IAAI,CAACC,YAAY,CAAC,IAAIb,SAAS,CAAC,IAAI,EAAEC,YAAY,CAACW,MAAK,CAAC,CAAC,CAAC;IACtE;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAI,CAACC,YAAY,CAAC,IAAIb,SAAS,CAAC,GAAG,EAAE,IAAID,cAAc,CAAC,CAAC,SAAS,EAAE,IAAI,CAACO,KAAK,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACG,UAAU,CAAC,CAAC,CAACG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;IACtI;EAAC;IAAA;IAAA,OACD,kBAAgBC,WAAW,EAAE;MACzB,IAAQX,UAAU,GAAoCW,WAAW,CAAzDX,UAAU;QAAEC,IAAI,GAA8BU,WAAW,CAA7CV,IAAI;QAAEO,KAAK,GAAuBG,WAAW,CAAvCH,KAAK;QAAEF,SAAS,GAAYK,WAAW,CAAhCL,SAAS;QAAEH,KAAK,GAAKQ,WAAW,CAArBR,KAAK;MACjD;MACA;MACA,IAAMS,MAAM,GAAG,IAAI,IAAI,EAAE;MACzBX,IAAI,IAAIW,MAAM,CAACX,IAAI,CAACA,IAAI,CAAC;MACzBO,KAAK,IAAII,MAAM,CAACJ,KAAK,CAACA,KAAK,CAAC;MAC5BF,SAAS,IAAIM,MAAM,CAACN,SAAS,CAACA,SAAS,CAAC;MACxCH,KAAK,IAAIS,MAAM,CAACT,KAAK,CAACA,KAAK,CAAC;MAC5B,OAAOS,MAAM;IACjB;EAAC;EAAA;AAAA,EA7DuBlB,MAAM;AA+DlC,SAASI,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}