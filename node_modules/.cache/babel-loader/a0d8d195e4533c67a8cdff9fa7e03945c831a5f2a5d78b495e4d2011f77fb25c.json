{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\n * @description Defines how to crop an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nvar ResizeCropAction = /*#__PURE__*/function (_ResizeAdvancedAction) {\n  _inherits(ResizeCropAction, _ResizeAdvancedAction);\n  var _super = _createSuper(ResizeCropAction);\n  function ResizeCropAction() {\n    _classCallCheck(this, ResizeCropAction);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ResizeCropAction, [{\n    key: \"x\",\n    value:\n    /**\n     * @description Horizontal position for custom-coordinates based cropping.\n     * @param {number} x The x position.\n     */\n    function x(_x) {\n      this._actionModel.x = _x;\n      return this.addQualifier(new Qualifier('x', _x));\n    }\n    /**\n     * @description Vertical position for custom-coordinates based cropping\n     * @param {number} y The y position.\n     */\n  }, {\n    key: \"y\",\n    value: function y(_y) {\n      this._actionModel.y = _y;\n      return this.addQualifier(new Qualifier('y', _y));\n    }\n    /**\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n     * @param {number | string} z The zoom factor. (Default: 1.0)\n     */\n  }, {\n    key: \"zoom\",\n    value: function zoom(z) {\n      this._actionModel.zoom = z;\n      return this.addQualifier(new Qualifier('z', z));\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var result = _get(_getPrototypeOf(ResizeCropAction), \"fromJson\", this).apply(this, [actionModel]);\n      actionModel.x && result.x(actionModel.x);\n      actionModel.y && result.y(actionModel.y);\n      actionModel.zoom && result.zoom(actionModel.zoom);\n      return result;\n    }\n  }]);\n  return ResizeCropAction;\n}(ResizeAdvancedAction);\nexport { ResizeCropAction };","map":{"version":3,"names":["Qualifier","ResizeAdvancedAction","ResizeCropAction","x","_actionModel","addQualifier","y","z","zoom","actionModel","result","apply"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/resize/ResizeCropAction.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { ResizeAdvancedAction } from \"./ResizeAdvancedAction.js\";\n/**\n * @description Defines how to crop an asset\n * @extends Actions.Resize.ResizeAdvancedAction\n * @memberOf Actions.Resize\n * @see Visit {@link Actions.Resize| Resize} for examples\n */\nclass ResizeCropAction extends ResizeAdvancedAction {\n    /**\n     * @description Horizontal position for custom-coordinates based cropping.\n     * @param {number} x The x position.\n     */\n    x(x) {\n        this._actionModel.x = x;\n        return this.addQualifier(new Qualifier('x', x));\n    }\n    /**\n     * @description Vertical position for custom-coordinates based cropping\n     * @param {number} y The y position.\n     */\n    y(y) {\n        this._actionModel.y = y;\n        return this.addQualifier(new Qualifier('y', y));\n    }\n    /**\n     * @description Controls how much of the original image surrounding the face to keep when using either the 'crop' or 'thumb' cropping modes with face detection.\n     * @param {number | string} z The zoom factor. (Default: 1.0)\n     */\n    zoom(z) {\n        this._actionModel.zoom = z;\n        return this.addQualifier(new Qualifier('z', z));\n    }\n    static fromJson(actionModel) {\n        const result = super.fromJson.apply(this, [actionModel]);\n        actionModel.x && result.x(actionModel.x);\n        actionModel.y && result.y(actionModel.y);\n        actionModel.zoom && result.zoom(actionModel.zoom);\n        return result;\n    }\n}\nexport { ResizeCropAction };\n"],"mappings":";;;;;;AAAA,SAASA,SAAS,QAAQ,uCAAuC;AACjE,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,gBAAgB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAClB;AACJ;AACA;AACA;IACI,WAAEC,EAAC,EAAE;MACD,IAAI,CAACC,YAAY,CAACD,CAAC,GAAGA,EAAC;MACvB,OAAO,IAAI,CAACE,YAAY,CAAC,IAAIL,SAAS,CAAC,GAAG,EAAEG,EAAC,CAAC,CAAC;IACnD;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,WAAEG,EAAC,EAAE;MACD,IAAI,CAACF,YAAY,CAACE,CAAC,GAAGA,EAAC;MACvB,OAAO,IAAI,CAACD,YAAY,CAAC,IAAIL,SAAS,CAAC,GAAG,EAAEM,EAAC,CAAC,CAAC;IACnD;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,cAAKC,CAAC,EAAE;MACJ,IAAI,CAACH,YAAY,CAACI,IAAI,GAAGD,CAAC;MAC1B,OAAO,IAAI,CAACF,YAAY,CAAC,IAAIL,SAAS,CAAC,GAAG,EAAEO,CAAC,CAAC,CAAC;IACnD;EAAC;IAAA;IAAA,OACD,kBAAgBE,WAAW,EAAE;MACzB,IAAMC,MAAM,GAAG,0DAAeC,KAAK,CAAC,IAAI,EAAE,CAACF,WAAW,CAAC,CAAC;MACxDA,WAAW,CAACN,CAAC,IAAIO,MAAM,CAACP,CAAC,CAACM,WAAW,CAACN,CAAC,CAAC;MACxCM,WAAW,CAACH,CAAC,IAAII,MAAM,CAACJ,CAAC,CAACG,WAAW,CAACH,CAAC,CAAC;MACxCG,WAAW,CAACD,IAAI,IAAIE,MAAM,CAACF,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC;MACjD,OAAOE,MAAM;IACjB;EAAC;EAAA;AAAA,EA/B0BT,oBAAoB;AAiCnD,SAASC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}