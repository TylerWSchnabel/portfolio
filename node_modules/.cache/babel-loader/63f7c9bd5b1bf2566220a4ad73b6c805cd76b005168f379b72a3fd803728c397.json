{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Layer from './layer.js';\nimport { snakeCase } from \"../utils/snakeCase.js\";\nimport { isEmpty } from \"../utils/isEmpty.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\nvar TextLayer = /*#__PURE__*/function (_Layer) {\n  _inherits(TextLayer, _Layer);\n  var _super = _createSuper(TextLayer);\n  /**\n   * @constructor TextLayer\n   * @param {Object} options - layer parameters\n   */\n  function TextLayer(options) {\n    var _this;\n    _classCallCheck(this, TextLayer);\n    var keys;\n    _this = _super.call(this, options);\n    keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\n    if (options != null) {\n      keys.forEach(function (key) {\n        var ref;\n        // @ts-ignore\n        return _this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n      });\n    }\n    _this.options.resourceType = \"text\";\n    return _this;\n  }\n  //@ts-ignore\n  _createClass(TextLayer, [{\n    key: \"resourceType\",\n    value: function resourceType(_resourceType) {\n      throw \"Cannot modify resourceType for text layers\";\n    }\n    //@ts-ignore\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      throw \"Cannot modify type for text layers\";\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format) {\n      throw \"Cannot modify format for text layers\";\n    }\n  }, {\n    key: \"fontFamily\",\n    value: function fontFamily(_fontFamily) {\n      this.options.fontFamily = _fontFamily;\n      return this;\n    }\n  }, {\n    key: \"fontSize\",\n    value: function fontSize(_fontSize) {\n      this.options.fontSize = _fontSize;\n      return this;\n    }\n  }, {\n    key: \"fontWeight\",\n    value: function fontWeight(_fontWeight) {\n      this.options.fontWeight = _fontWeight;\n      return this;\n    }\n  }, {\n    key: \"fontStyle\",\n    value: function fontStyle(_fontStyle) {\n      this.options.fontStyle = _fontStyle;\n      return this;\n    }\n  }, {\n    key: \"textDecoration\",\n    value: function textDecoration(_textDecoration) {\n      this.options.textDecoration = _textDecoration;\n      return this;\n    }\n  }, {\n    key: \"textAlign\",\n    value: function textAlign(_textAlign) {\n      this.options.textAlign = _textAlign;\n      return this;\n    }\n  }, {\n    key: \"stroke\",\n    value: function stroke(_stroke) {\n      this.options.stroke = _stroke;\n      return this;\n    }\n  }, {\n    key: \"letterSpacing\",\n    value: function letterSpacing(_letterSpacing) {\n      this.options.letterSpacing = _letterSpacing;\n      return this;\n    }\n  }, {\n    key: \"lineSpacing\",\n    value: function lineSpacing(_lineSpacing) {\n      this.options.lineSpacing = _lineSpacing;\n      return this;\n    }\n  }, {\n    key: \"fontHinting\",\n    value: function fontHinting(_fontHinting) {\n      this.options.fontHinting = _fontHinting;\n      return this;\n    }\n  }, {\n    key: \"fontAntialiasing\",\n    value: function fontAntialiasing(_fontAntialiasing) {\n      this.options.fontAntialiasing = _fontAntialiasing;\n      return this;\n    }\n  }, {\n    key: \"text\",\n    value: function text(_text) {\n      this.options.text = _text;\n      return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function TextLayer#toString\n     * @return {String}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\n      style = this.textStyleIdentifier();\n      if (this.options.publicId != null) {\n        publicId = this.getFullPublicId();\n      }\n      if (this.options.text != null) {\n        hasPublicId = !isEmpty(publicId);\n        hasStyle = !isEmpty(style);\n        if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\n          throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\n        }\n        re = /\\$\\([a-zA-Z]\\w*\\)/g;\n        start = 0;\n        //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\n        textSource = smartEscape(this.options.text, /[,\\/]/g);\n        text = \"\";\n        while (res = re.exec(textSource)) {\n          text += smartEscape(textSource.slice(start, res.index));\n          text += res[0];\n          start = res.index + res[0].length;\n        }\n        text += smartEscape(textSource.slice(start));\n      }\n      components = [this.options.resourceType, style, publicId, text];\n      return components.filter(function (x) {\n        return !!x;\n      }).join(\":\");\n    }\n  }, {\n    key: \"textStyleIdentifier\",\n    value: function textStyleIdentifier() {\n      var components;\n      components = [];\n      if (this.options.fontWeight !== \"normal\") {\n        components.push(this.options.fontWeight);\n      }\n      if (this.options.fontStyle !== \"normal\") {\n        components.push(this.options.fontStyle);\n      }\n      if (this.options.textDecoration !== \"none\") {\n        components.push(this.options.textDecoration);\n      }\n      components.push(this.options.textAlign);\n      if (this.options.stroke !== \"none\") {\n        components.push(this.options.stroke);\n      }\n      if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\n        components.push(\"letter_spacing_\" + this.options.letterSpacing);\n      }\n      if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\n        components.push(\"line_spacing_\" + this.options.lineSpacing);\n      }\n      if (!isEmpty(this.options.fontAntialiasing)) {\n        components.push(\"antialias_\" + this.options.fontAntialiasing);\n      }\n      if (!isEmpty(this.options.fontHinting)) {\n        components.push(\"hinting_\" + this.options.fontHinting);\n      }\n      if (!isEmpty(components.filter(function (x) {\n        return !!x;\n      }))) {\n        if (isEmpty(this.options.fontFamily)) {\n          throw \"Must supply fontFamily. \".concat(components);\n        }\n        if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\n          throw \"Must supply fontSize.\";\n        }\n      }\n      components.unshift(this.options.fontFamily, this.options.fontSize);\n      components = components.filter(function (x) {\n        return !!x;\n      }).join(\"_\");\n      return components;\n    }\n  }]);\n  return TextLayer;\n}(Layer);\n;\nexport default TextLayer;","map":{"version":3,"names":["Layer","snakeCase","isEmpty","smartEscape","isNumberLike","TextLayer","options","keys","forEach","key","ref","resourceType","type","format","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","textAlign","stroke","letterSpacing","lineSpacing","fontHinting","fontAntialiasing","text","components","hasPublicId","hasStyle","publicId","re","res","start","style","textSource","textStyleIdentifier","getFullPublicId","exec","slice","index","length","filter","x","join","push","unshift"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/backwards/legacyLayer/textlayer.js"],"sourcesContent":["import Layer from './layer.js';\nimport { snakeCase } from \"../utils/snakeCase.js\";\nimport { isEmpty } from \"../utils/isEmpty.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\nclass TextLayer extends Layer {\n    /**\n     * @constructor TextLayer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        let keys;\n        super(options);\n        keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\n        if (options != null) {\n            keys.forEach((key) => {\n                var ref;\n                // @ts-ignore\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n            });\n        }\n        this.options.resourceType = \"text\";\n    }\n    //@ts-ignore\n    resourceType(resourceType) {\n        throw \"Cannot modify resourceType for text layers\";\n    }\n    //@ts-ignore\n    type(type) {\n        throw \"Cannot modify type for text layers\";\n    }\n    format(format) {\n        throw \"Cannot modify format for text layers\";\n    }\n    fontFamily(fontFamily) {\n        this.options.fontFamily = fontFamily;\n        return this;\n    }\n    fontSize(fontSize) {\n        this.options.fontSize = fontSize;\n        return this;\n    }\n    fontWeight(fontWeight) {\n        this.options.fontWeight = fontWeight;\n        return this;\n    }\n    fontStyle(fontStyle) {\n        this.options.fontStyle = fontStyle;\n        return this;\n    }\n    textDecoration(textDecoration) {\n        this.options.textDecoration = textDecoration;\n        return this;\n    }\n    textAlign(textAlign) {\n        this.options.textAlign = textAlign;\n        return this;\n    }\n    stroke(stroke) {\n        this.options.stroke = stroke;\n        return this;\n    }\n    letterSpacing(letterSpacing) {\n        this.options.letterSpacing = letterSpacing;\n        return this;\n    }\n    lineSpacing(lineSpacing) {\n        this.options.lineSpacing = lineSpacing;\n        return this;\n    }\n    fontHinting(fontHinting) {\n        this.options.fontHinting = fontHinting;\n        return this;\n    }\n    fontAntialiasing(fontAntialiasing) {\n        this.options.fontAntialiasing = fontAntialiasing;\n        return this;\n    }\n    text(text) {\n        this.options.text = text;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function TextLayer#toString\n     * @return {String}\n     */\n    toString() {\n        var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\n        style = this.textStyleIdentifier();\n        if (this.options.publicId != null) {\n            publicId = this.getFullPublicId();\n        }\n        if (this.options.text != null) {\n            hasPublicId = !isEmpty(publicId);\n            hasStyle = !isEmpty(style);\n            if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\n                throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\n            }\n            re = /\\$\\([a-zA-Z]\\w*\\)/g;\n            start = 0;\n            //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\n            textSource = smartEscape(this.options.text, /[,\\/]/g);\n            text = \"\";\n            while (res = re.exec(textSource)) {\n                text += smartEscape(textSource.slice(start, res.index));\n                text += res[0];\n                start = res.index + res[0].length;\n            }\n            text += smartEscape(textSource.slice(start));\n        }\n        components = [this.options.resourceType, style, publicId, text];\n        return (components).filter(x => !!x).join(\":\");\n    }\n    textStyleIdentifier() {\n        var components;\n        components = [];\n        if (this.options.fontWeight !== \"normal\") {\n            components.push(this.options.fontWeight);\n        }\n        if (this.options.fontStyle !== \"normal\") {\n            components.push(this.options.fontStyle);\n        }\n        if (this.options.textDecoration !== \"none\") {\n            components.push(this.options.textDecoration);\n        }\n        components.push(this.options.textAlign);\n        if (this.options.stroke !== \"none\") {\n            components.push(this.options.stroke);\n        }\n        if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\n            components.push(\"letter_spacing_\" + this.options.letterSpacing);\n        }\n        if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\n            components.push(\"line_spacing_\" + this.options.lineSpacing);\n        }\n        if (!(isEmpty(this.options.fontAntialiasing))) {\n            components.push(\"antialias_\" + this.options.fontAntialiasing);\n        }\n        if (!(isEmpty(this.options.fontHinting))) {\n            components.push(\"hinting_\" + this.options.fontHinting);\n        }\n        if (!isEmpty(components.filter(x => !!x))) {\n            if (isEmpty(this.options.fontFamily)) {\n                throw `Must supply fontFamily. ${components}`;\n            }\n            if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\n                throw \"Must supply fontSize.\";\n            }\n        }\n        components.unshift(this.options.fontFamily, this.options.fontSize);\n        components = components.filter(x => !!x).join(\"_\");\n        return components;\n    }\n}\n;\nexport default TextLayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}