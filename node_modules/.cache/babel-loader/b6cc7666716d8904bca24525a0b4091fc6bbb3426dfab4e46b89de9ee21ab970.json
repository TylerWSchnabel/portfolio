{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Class for shortening a video to the specified range.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nvar TrimAction = /*#__PURE__*/function (_Action) {\n  _inherits(TrimAction, _Action);\n  var _super = _createSuper(TrimAction);\n  function TrimAction() {\n    var _this;\n    _classCallCheck(this, TrimAction);\n    _this = _super.call(this);\n    _this._actionModel = {\n      actionType: 'trimVideo'\n    };\n    return _this;\n  }\n  /**\n   *\n   * @description Support Percentages in values (30% -> 30p)\n   * @param {string|number} val\n   * @private\n   * @return {string}\n   */\n  _createClass(TrimAction, [{\n    key: \"parseVal\",\n    value: function parseVal(val) {\n      return typeof val === 'number' ? val : val.replace('%', 'p');\n    }\n    /**\n     * @description Sets the starting position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\n     *                           float representing the time in seconds or a string representing the percentage of the\n     *                           video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n  }, {\n    key: \"startOffset\",\n    value: function startOffset(offset) {\n      this._actionModel.startOffset = +offset;\n      return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the end position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\n     *                         float representing the time in seconds or a string representing the percentage of the\n     *                         video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n  }, {\n    key: \"endOffset\",\n    value: function endOffset(offset) {\n      this._actionModel.endOffset = +offset;\n      return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the duration of the video to keep.\n     *\n     * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\n     *                        representing the time in seconds or a string representing the percentage of the\n     *                        video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n  }, {\n    key: \"duration\",\n    value: function duration(_duration) {\n      this._actionModel.duration = _duration;\n      return this.addQualifier(new Qualifier('du', this.parseVal(_duration)));\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var duration = actionModel.duration,\n        startOffset = actionModel.startOffset,\n        endOffset = actionModel.endOffset;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this();\n      if (duration != null) {\n        result.duration(duration);\n      }\n      if (startOffset != null) {\n        result.startOffset(startOffset);\n      }\n      if (endOffset != null) {\n        result.endOffset(endOffset);\n      }\n      return result;\n    }\n  }]);\n  return TrimAction;\n}(Action);\nexport default TrimAction;","map":{"version":3,"names":["Action","Qualifier","TrimAction","_actionModel","actionType","val","replace","offset","startOffset","addQualifier","parseVal","endOffset","duration","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/videoEdit/TrimAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Class for shortening a video to the specified range.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nclass TrimAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = {\n            actionType: 'trimVideo'\n        };\n    }\n    /**\n     *\n     * @description Support Percentages in values (30% -> 30p)\n     * @param {string|number} val\n     * @private\n     * @return {string}\n     */\n    parseVal(val) {\n        return typeof val === 'number' ? val : val.replace('%', 'p');\n    }\n    /**\n     * @description Sets the starting position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\n     *                           float representing the time in seconds or a string representing the percentage of the\n     *                           video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    startOffset(offset) {\n        this._actionModel.startOffset = +offset;\n        return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the end position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\n     *                         float representing the time in seconds or a string representing the percentage of the\n     *                         video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    endOffset(offset) {\n        this._actionModel.endOffset = +offset;\n        return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the duration of the video to keep.\n     *\n     * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\n     *                        representing the time in seconds or a string representing the percentage of the\n     *                        video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    duration(duration) {\n        this._actionModel.duration = duration;\n        return this.addQualifier(new Qualifier('du', this.parseVal(duration)));\n    }\n    static fromJson(actionModel) {\n        const { duration, startOffset, endOffset } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        if (duration != null) {\n            result.duration(duration);\n        }\n        if (startOffset != null) {\n            result.startOffset(startOffset);\n        }\n        if (endOffset != null) {\n            result.endOffset(endOffset);\n        }\n        return result;\n    }\n}\nexport default TrimAction;\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,UAAU;EAAA;EAAA;EACZ,sBAAc;IAAA;IAAA;IACV;IACA,MAAKC,YAAY,GAAG;MAChBC,UAAU,EAAE;IAChB,CAAC;IAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,kBAASC,GAAG,EAAE;MACV,OAAO,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAChE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAA;IAAA,OAQA,qBAAYC,MAAM,EAAE;MAChB,IAAI,CAACJ,YAAY,CAACK,WAAW,GAAG,CAACD,MAAM;MACvC,OAAO,IAAI,CAACE,YAAY,CAAC,IAAIR,SAAS,CAAC,IAAI,EAAE,IAAI,CAACS,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;IACxE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAA;IAAA,OAQA,mBAAUA,MAAM,EAAE;MACd,IAAI,CAACJ,YAAY,CAACQ,SAAS,GAAG,CAACJ,MAAM;MACrC,OAAO,IAAI,CAACE,YAAY,CAAC,IAAIR,SAAS,CAAC,IAAI,EAAE,IAAI,CAACS,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;IACxE;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAPI;IAAA;IAAA,OAQA,kBAASK,SAAQ,EAAE;MACf,IAAI,CAACT,YAAY,CAACS,QAAQ,GAAGA,SAAQ;MACrC,OAAO,IAAI,CAACH,YAAY,CAAC,IAAIR,SAAS,CAAC,IAAI,EAAE,IAAI,CAACS,QAAQ,CAACE,SAAQ,CAAC,CAAC,CAAC;IAC1E;EAAC;IAAA;IAAA,OACD,kBAAgBC,WAAW,EAAE;MACzB,IAAQD,QAAQ,GAA6BC,WAAW,CAAhDD,QAAQ;QAAEJ,WAAW,GAAgBK,WAAW,CAAtCL,WAAW;QAAEG,SAAS,GAAKE,WAAW,CAAzBF,SAAS;MACxC;MACA;MACA,IAAMG,MAAM,GAAG,IAAI,IAAI,EAAE;MACzB,IAAIF,QAAQ,IAAI,IAAI,EAAE;QAClBE,MAAM,CAACF,QAAQ,CAACA,QAAQ,CAAC;MAC7B;MACA,IAAIJ,WAAW,IAAI,IAAI,EAAE;QACrBM,MAAM,CAACN,WAAW,CAACA,WAAW,CAAC;MACnC;MACA,IAAIG,SAAS,IAAI,IAAI,EAAE;QACnBG,MAAM,CAACH,SAAS,CAACA,SAAS,CAAC;MAC/B;MACA,OAAOG,MAAM;IACjB;EAAC;EAAA;AAAA,EApEoBd,MAAM;AAsE/B,eAAeE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}