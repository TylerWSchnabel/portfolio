{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Expression from './expression.js';\n/**\n * Represents a transformation condition.\n * @param {string} conditionStr - a condition in string format\n * @class Condition\n * @example\n * // normally this class is not instantiated directly\n * var tr = cloudinary.Transformation.new()\n *    .if().width( \">\", 1000).and().aspectRatio(\"<\", \"3:4\").then()\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n * var tr = cloudinary.Transformation.new()\n *    .if(\"w > 1000 and aspectRatio < 3:4\")\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n */\nvar Condition = /*#__PURE__*/function (_Expression) {\n  _inherits(Condition, _Expression);\n  var _super = _createSuper(Condition);\n  function Condition(conditionStr) {\n    _classCallCheck(this, Condition);\n    return _super.call(this, conditionStr);\n  }\n  /**\n   * @function Condition#height\n   * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n   * @param {string|number} value the right hand side value\n   * @return {Condition} this condition\n   */\n  _createClass(Condition, [{\n    key: \"height\",\n    value: function height(operator, value) {\n      return this.predicate(\"h\", operator, value);\n    }\n    /**\n     * @function Condition#width\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"width\",\n    value: function width(operator, value) {\n      return this.predicate(\"w\", operator, value);\n    }\n    /**\n     * @function Condition#aspectRatio\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"aspectRatio\",\n    value: function aspectRatio(operator, value) {\n      return this.predicate(\"ar\", operator, value);\n    }\n    /**\n     * @function Condition#pages\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"pageCount\",\n    value: function pageCount(operator, value) {\n      return this.predicate(\"pc\", operator, value);\n    }\n    /**\n     * @function Condition#faces\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"faceCount\",\n    value: function faceCount(operator, value) {\n      return this.predicate(\"fc\", operator, value);\n    }\n    /**\n     * @function Condition#duration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"duration\",\n    value: function duration(operator, value) {\n      return this.predicate(\"du\", operator, value);\n    }\n    /**\n     * @function Condition#initialDuration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n  }, {\n    key: \"initialDuration\",\n    value: function initialDuration(operator, value) {\n      return this.predicate(\"idu\", operator, value);\n    }\n  }]);\n  return Condition;\n}(Expression);\nexport default Condition;","map":{"version":3,"names":["Expression","Condition","conditionStr","operator","value","predicate"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/backwards/condition.js"],"sourcesContent":["import Expression from './expression.js';\n/**\n * Represents a transformation condition.\n * @param {string} conditionStr - a condition in string format\n * @class Condition\n * @example\n * // normally this class is not instantiated directly\n * var tr = cloudinary.Transformation.new()\n *    .if().width( \">\", 1000).and().aspectRatio(\"<\", \"3:4\").then()\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n * var tr = cloudinary.Transformation.new()\n *    .if(\"w > 1000 and aspectRatio < 3:4\")\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n */\nclass Condition extends Expression {\n    constructor(conditionStr) {\n        super(conditionStr);\n    }\n    /**\n     * @function Condition#height\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    height(operator, value) {\n        return this.predicate(\"h\", operator, value);\n    }\n    /**\n     * @function Condition#width\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    width(operator, value) {\n        return this.predicate(\"w\", operator, value);\n    }\n    /**\n     * @function Condition#aspectRatio\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    aspectRatio(operator, value) {\n        return this.predicate(\"ar\", operator, value);\n    }\n    /**\n     * @function Condition#pages\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    pageCount(operator, value) {\n        return this.predicate(\"pc\", operator, value);\n    }\n    /**\n     * @function Condition#faces\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    faceCount(operator, value) {\n        return this.predicate(\"fc\", operator, value);\n    }\n    /**\n     * @function Condition#duration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    duration(operator, value) {\n        return this.predicate(\"du\", operator, value);\n    }\n    /**\n     * @function Condition#initialDuration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    initialDuration(operator, value) {\n        return this.predicate(\"idu\", operator, value);\n    }\n}\nexport default Condition;\n"],"mappings":";;;;AAAA,OAAOA,UAAU,MAAM,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA,IAuBMC,SAAS;EAAA;EAAA;EACX,mBAAYC,YAAY,EAAE;IAAA;IAAA,yBAChBA,YAAY;EACtB;EACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,gBAAOC,QAAQ,EAAEC,KAAK,EAAE;MACpB,OAAO,IAAI,CAACC,SAAS,CAAC,GAAG,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAC/C;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,eAAMD,QAAQ,EAAEC,KAAK,EAAE;MACnB,OAAO,IAAI,CAACC,SAAS,CAAC,GAAG,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAC/C;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,qBAAYD,QAAQ,EAAEC,KAAK,EAAE;MACzB,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAChD;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,mBAAUD,QAAQ,EAAEC,KAAK,EAAE;MACvB,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAChD;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,mBAAUD,QAAQ,EAAEC,KAAK,EAAE;MACvB,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAChD;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,kBAASD,QAAQ,EAAEC,KAAK,EAAE;MACtB,OAAO,IAAI,CAACC,SAAS,CAAC,IAAI,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IAChD;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,yBAAgBD,QAAQ,EAAEC,KAAK,EAAE;MAC7B,OAAO,IAAI,CAACC,SAAS,CAAC,KAAK,EAAEF,QAAQ,EAAEC,KAAK,CAAC;IACjD;EAAC;EAAA;AAAA,EAlEmBJ,UAAU;AAoElC,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}