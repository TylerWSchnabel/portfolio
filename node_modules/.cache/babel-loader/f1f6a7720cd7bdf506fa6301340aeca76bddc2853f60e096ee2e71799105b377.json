{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar ThemeEffect = /*#__PURE__*/function (_Action) {\n  _inherits(ThemeEffect, _Action);\n  var _super = _createSuper(ThemeEffect);\n  function ThemeEffect(color) {\n    var _this;\n    _classCallCheck(this, ThemeEffect);\n    _this = _super.call(this);\n    _this.effectName = 'theme';\n    _this.color = color;\n    return _this;\n  }\n  /**\n   * @description The sensitivity to photographic elements of an image.\n   *              A value of 0 treats the whole image as non-photographic.\n   *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n   * @param {number} photosensitivity\n   * @return {this}\n   */\n  _createClass(ThemeEffect, [{\n    key: \"photosensitivity\",\n    value: function photosensitivity(_photosensitivity) {\n      this._photosensitivity = _photosensitivity;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var sensitivity = this._photosensitivity ? \":photosensitivity_\".concat(this._photosensitivity) : '';\n      // Replace # in hex colors (#fff -> fff)\n      var val = \"\".concat(this.effectName, \":color_\").concat(this.color.replace('#', '')).concat(sensitivity);\n      this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n      return;\n    }\n  }]);\n  return ThemeEffect;\n}(Action);\nexport { ThemeEffect };","map":{"version":3,"names":["Qualifier","QualifierValue","Action","ThemeEffect","color","effectName","photosensitivity","_photosensitivity","sensitivity","val","replace","addQualifier"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Theme.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ThemeEffect extends Action {\n    constructor(color) {\n        super();\n        this.effectName = 'theme';\n        this.color = color;\n    }\n    /**\n     * @description The sensitivity to photographic elements of an image.\n     *              A value of 0 treats the whole image as non-photographic.\n     *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n     * @param {number} photosensitivity\n     * @return {this}\n     */\n    photosensitivity(photosensitivity) {\n        this._photosensitivity = photosensitivity;\n        return this;\n    }\n    prepareQualifiers() {\n        const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : '';\n        // Replace # in hex colors (#fff -> fff)\n        const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n        this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n        return;\n    }\n}\nexport { ThemeEffect };\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,WAAW;EAAA;EAAA;EACb,qBAAYC,KAAK,EAAE;IAAA;IAAA;IACf;IACA,MAAKC,UAAU,GAAG,OAAO;IACzB,MAAKD,KAAK,GAAGA,KAAK;IAAC;EACvB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,0BAAiBE,iBAAgB,EAAE;MAC/B,IAAI,CAACC,iBAAiB,GAAGD,iBAAgB;MACzC,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAME,WAAW,GAAG,IAAI,CAACD,iBAAiB,+BAAwB,IAAI,CAACA,iBAAiB,IAAK,EAAE;MAC/F;MACA,IAAME,GAAG,aAAM,IAAI,CAACJ,UAAU,oBAAU,IAAI,CAACD,KAAK,CAACM,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,SAAGF,WAAW,CAAE;MACnF,IAAI,CAACG,YAAY,CAAC,IAAIX,SAAS,CAAC,GAAG,EAAE,IAAIC,cAAc,CAACQ,GAAG,CAAC,CAAC,CAAC;MAC9D;IACJ;EAAC;EAAA;AAAA,EAvBqBP,MAAM;AAyBhC,SAASC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}