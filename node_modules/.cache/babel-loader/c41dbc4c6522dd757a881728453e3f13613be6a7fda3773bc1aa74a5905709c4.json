{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nvar BaseCommonBackground = /*#__PURE__*/function (_BackgroundQualifier) {\n  _inherits(BaseCommonBackground, _BackgroundQualifier);\n  var _super = _createSuper(BaseCommonBackground);\n  function BaseCommonBackground() {\n    var _this;\n    _classCallCheck(this, BaseCommonBackground);\n    _this = _super.call(this);\n    _this._palette = [];\n    return _this;\n  }\n  /**\n   * @description Selects the strongest contrasting color to use for padding.\n   * @return {this}\n   */\n  _createClass(BaseCommonBackground, [{\n    key: \"contrast\",\n    value: function contrast() {\n      this._contrast = true;\n      return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n  }, {\n    key: \"palette\",\n    value: function palette() {\n      for (var _len = arguments.length, colors = new Array(_len), _key = 0; _key < _len; _key++) {\n        colors[_key] = arguments[_key];\n      }\n      this._palette = colors.map(function (color) {\n        return prepareColor(color);\n      });\n      return this;\n    }\n  }]);\n  return BaseCommonBackground;\n}(BackgroundQualifier);\nexport { BaseCommonBackground };","map":{"version":3,"names":["prepareColor","BackgroundQualifier","BaseCommonBackground","_palette","_contrast","colors","map","color"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseCommonBackground.js"],"sourcesContent":["import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n    constructor() {\n        super();\n        this._palette = [];\n    }\n    /**\n     * @description Selects the strongest contrasting color to use for padding.\n     * @return {this}\n     */\n    contrast() {\n        this._contrast = true;\n        return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n    palette(...colors) {\n        this._palette = colors.map((color) => {\n            return prepareColor(color);\n        });\n        return this;\n    }\n}\nexport { BaseCommonBackground };\n"],"mappings":";;;;AAAA,SAASA,YAAY,QAAQ,4CAA4C;AACzE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AAJA,IAKMC,oBAAoB;EAAA;EAAA;EACtB,gCAAc;IAAA;IAAA;IACV;IACA,MAAKC,QAAQ,GAAG,EAAE;IAAC;EACvB;EACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,oBAAW;MACP,IAAI,CAACC,SAAS,GAAG,IAAI;MACrB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,mBAAmB;MAAA,kCAARC,MAAM;QAANA,MAAM;MAAA;MACb,IAAI,CAACF,QAAQ,GAAGE,MAAM,CAACC,GAAG,CAAC,UAACC,KAAK,EAAK;QAClC,OAAOP,YAAY,CAACO,KAAK,CAAC;MAC9B,CAAC,CAAC;MACF,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAvB8BN,mBAAmB;AAyBtD,SAASC,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}