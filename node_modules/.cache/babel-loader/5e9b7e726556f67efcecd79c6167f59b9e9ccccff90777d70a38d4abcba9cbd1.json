{"ast":null,"code":"import _toConsumableArray from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, predominant, predominantGradient } from \"../../qualifiers/background.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\nfunction createBlurredBackground(backgroundModel) {\n  var brightness = backgroundModel.brightness,\n    intensity = backgroundModel.intensity;\n  var result = Background.blurred();\n  if (brightness || brightness == 0) {\n    result.brightness(brightness);\n  }\n  if (intensity || intensity == 0) {\n    result.intensity(intensity);\n  }\n  return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\nfunction createGradientBackground(background, backgroundModel) {\n  var gradientColors = backgroundModel.gradientColors,\n    gradientDirection = backgroundModel.gradientDirection,\n    contrast = backgroundModel.contrast,\n    palette = backgroundModel.palette;\n  if (contrast) {\n    background.contrast();\n  }\n  if (palette) {\n    background.palette.apply(background, _toConsumableArray(palette));\n  }\n  if (gradientColors) {\n    background.gradientColors(+gradientColors);\n  }\n  if (gradientDirection) {\n    background.gradientDirection(gradientDirection);\n  }\n  return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\nfunction createContrastPaletteBackground(background, backgroundModel) {\n  var contrast = backgroundModel.contrast,\n    palette = backgroundModel.palette;\n  if (contrast) {\n    background.contrast();\n  }\n  if (palette) {\n    background.palette.apply(background, _toConsumableArray(palette));\n  }\n  return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\nfunction createBackgroundFromModel(backgroundModel) {\n  var backgroundType = backgroundModel.backgroundType;\n  switch (backgroundType) {\n    case 'auto':\n      return auto();\n    case 'blurred':\n      return createBlurredBackground(backgroundModel);\n    case 'border':\n      return createContrastPaletteBackground(border(), backgroundModel);\n    case 'borderGradient':\n      return createGradientBackground(borderGradient(), backgroundModel);\n    case 'predominant':\n      return createContrastPaletteBackground(predominant(), backgroundModel);\n    case 'predominantGradient':\n      return createGradientBackground(predominantGradient(), backgroundModel);\n    default:\n      return color(backgroundModel.color);\n  }\n}\nexport { createBackgroundFromModel };","map":{"version":3,"names":["Background","auto","border","borderGradient","color","predominant","predominantGradient","createBlurredBackground","backgroundModel","brightness","intensity","result","blurred","createGradientBackground","background","gradientColors","gradientDirection","contrast","palette","createContrastPaletteBackground","createBackgroundFromModel","backgroundType"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/internal/models/createBackgroundFromModel.js"],"sourcesContent":["import { Background } from \"../../qualifiers.js\";\nimport { auto, border, borderGradient, color, predominant, predominantGradient } from \"../../qualifiers/background.js\";\n/**\n * Create BackgroundQualifier from IBlurredBackgroundModel\n * @param backgroundModel\n */\nfunction createBlurredBackground(backgroundModel) {\n    const { brightness, intensity } = backgroundModel;\n    const result = Background.blurred();\n    if (brightness || brightness == 0) {\n        result.brightness(brightness);\n    }\n    if (intensity || intensity == 0) {\n        result.intensity(intensity);\n    }\n    return result;\n}\n/**\n * Create a gradientBackground from given model\n * @param background\n * @param backgroundModel\n */\nfunction createGradientBackground(background, backgroundModel) {\n    const { gradientColors, gradientDirection, contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    if (gradientColors) {\n        background.gradientColors(+gradientColors);\n    }\n    if (gradientDirection) {\n        background.gradientDirection(gradientDirection);\n    }\n    return background;\n}\n/**\n * Crete a background with contrast and palette from given model\n * @param background\n * @param backgroundModel\n */\nfunction createContrastPaletteBackground(background, backgroundModel) {\n    const { contrast, palette } = backgroundModel;\n    if (contrast) {\n        background.contrast();\n    }\n    if (palette) {\n        background.palette(...palette);\n    }\n    return background;\n}\n/**\n * Create BackgroundQualifier from IBackgroundModel\n * @param backgroundModel\n */\nfunction createBackgroundFromModel(backgroundModel) {\n    const { backgroundType } = backgroundModel;\n    switch (backgroundType) {\n        case 'auto':\n            return auto();\n        case 'blurred':\n            return createBlurredBackground(backgroundModel);\n        case 'border':\n            return createContrastPaletteBackground(border(), backgroundModel);\n        case 'borderGradient':\n            return createGradientBackground(borderGradient(), backgroundModel);\n        case 'predominant':\n            return createContrastPaletteBackground(predominant(), backgroundModel);\n        case 'predominantGradient':\n            return createGradientBackground(predominantGradient(), backgroundModel);\n        default:\n            return color(backgroundModel.color);\n    }\n}\nexport { createBackgroundFromModel };\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,qBAAqB;AAChD,SAASC,IAAI,EAAEC,MAAM,EAAEC,cAAc,EAAEC,KAAK,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,gCAAgC;AACtH;AACA;AACA;AACA;AACA,SAASC,uBAAuB,CAACC,eAAe,EAAE;EAC9C,IAAQC,UAAU,GAAgBD,eAAe,CAAzCC,UAAU;IAAEC,SAAS,GAAKF,eAAe,CAA7BE,SAAS;EAC7B,IAAMC,MAAM,GAAGX,UAAU,CAACY,OAAO,EAAE;EACnC,IAAIH,UAAU,IAAIA,UAAU,IAAI,CAAC,EAAE;IAC/BE,MAAM,CAACF,UAAU,CAACA,UAAU,CAAC;EACjC;EACA,IAAIC,SAAS,IAAIA,SAAS,IAAI,CAAC,EAAE;IAC7BC,MAAM,CAACD,SAAS,CAACA,SAAS,CAAC;EAC/B;EACA,OAAOC,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,wBAAwB,CAACC,UAAU,EAAEN,eAAe,EAAE;EAC3D,IAAQO,cAAc,GAA2CP,eAAe,CAAxEO,cAAc;IAAEC,iBAAiB,GAAwBR,eAAe,CAAxDQ,iBAAiB;IAAEC,QAAQ,GAAcT,eAAe,CAArCS,QAAQ;IAAEC,OAAO,GAAKV,eAAe,CAA3BU,OAAO;EAC5D,IAAID,QAAQ,EAAE;IACVH,UAAU,CAACG,QAAQ,EAAE;EACzB;EACA,IAAIC,OAAO,EAAE;IACTJ,UAAU,CAACI,OAAO,OAAlBJ,UAAU,qBAAYI,OAAO,EAAC;EAClC;EACA,IAAIH,cAAc,EAAE;IAChBD,UAAU,CAACC,cAAc,CAAC,CAACA,cAAc,CAAC;EAC9C;EACA,IAAIC,iBAAiB,EAAE;IACnBF,UAAU,CAACE,iBAAiB,CAACA,iBAAiB,CAAC;EACnD;EACA,OAAOF,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,+BAA+B,CAACL,UAAU,EAAEN,eAAe,EAAE;EAClE,IAAQS,QAAQ,GAAcT,eAAe,CAArCS,QAAQ;IAAEC,OAAO,GAAKV,eAAe,CAA3BU,OAAO;EACzB,IAAID,QAAQ,EAAE;IACVH,UAAU,CAACG,QAAQ,EAAE;EACzB;EACA,IAAIC,OAAO,EAAE;IACTJ,UAAU,CAACI,OAAO,OAAlBJ,UAAU,qBAAYI,OAAO,EAAC;EAClC;EACA,OAAOJ,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA,SAASM,yBAAyB,CAACZ,eAAe,EAAE;EAChD,IAAQa,cAAc,GAAKb,eAAe,CAAlCa,cAAc;EACtB,QAAQA,cAAc;IAClB,KAAK,MAAM;MACP,OAAOpB,IAAI,EAAE;IACjB,KAAK,SAAS;MACV,OAAOM,uBAAuB,CAACC,eAAe,CAAC;IACnD,KAAK,QAAQ;MACT,OAAOW,+BAA+B,CAACjB,MAAM,EAAE,EAAEM,eAAe,CAAC;IACrE,KAAK,gBAAgB;MACjB,OAAOK,wBAAwB,CAACV,cAAc,EAAE,EAAEK,eAAe,CAAC;IACtE,KAAK,aAAa;MACd,OAAOW,+BAA+B,CAACd,WAAW,EAAE,EAAEG,eAAe,CAAC;IAC1E,KAAK,qBAAqB;MACtB,OAAOK,wBAAwB,CAACP,mBAAmB,EAAE,EAAEE,eAAe,CAAC;IAC3E;MACI,OAAOJ,KAAK,CAACI,eAAe,CAACJ,KAAK,CAAC;EAAC;AAEhD;AACA,SAASgB,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}