{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nvar FocusOnGravity = /*#__PURE__*/function (_GravityQualifier) {\n  _inherits(FocusOnGravity, _GravityQualifier);\n  var _super = _createSuper(FocusOnGravity);\n  function FocusOnGravity(FocusOnObjects) {\n    _classCallCheck(this, FocusOnGravity);\n    // Required due to https://github.com/microsoft/TypeScript/issues/13029\n    /* istanbul ignore next */\n    return _super.call(this, FocusOnObjects);\n  }\n  /**\n   * @description Specifies the gravity to use if none of the other gravity objects are found.\n   * @param {Qualifiers.Gravity.AutoGravity} val\n   */\n  _createClass(FocusOnGravity, [{\n    key: \"fallbackGravity\",\n    value: function fallbackGravity(val) {\n      /*\n       *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n       *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n       *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n       *  To solve it, we take only the value from the qualifier, instead of the whole thing\n       */\n      this.addValue(val.qualifierValue);\n      return this;\n    }\n  }]);\n  return FocusOnGravity;\n}(GravityQualifier);\nexport { FocusOnGravity };","map":{"version":3,"names":["GravityQualifier","FocusOnGravity","FocusOnObjects","val","addValue","qualifierValue"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/gravity/focusOnGravity/FocusOnGravity.js"],"sourcesContent":["import { GravityQualifier } from \"../GravityQualifier.js\";\n/**\n * @description The class for the FocusOn builder\n * @memberOf Qualifiers.Gravity\n * @extends {Qualifiers.Gravity.GravityQualifier}\n */\nclass FocusOnGravity extends GravityQualifier {\n    constructor(FocusOnObjects) {\n        // Required due to https://github.com/microsoft/TypeScript/issues/13029\n        /* istanbul ignore next */\n        super(FocusOnObjects);\n    }\n    /**\n     * @description Specifies the gravity to use if none of the other gravity objects are found.\n     * @param {Qualifiers.Gravity.AutoGravity} val\n     */\n    fallbackGravity(val) {\n        /*\n         *  FocusOnGravity(this) is already a qualifier, with a key and a value g_{obj1}\n         *  fallBackGravity also attempts to add a value, to reach the result of g_{obj1}:auto:{obj2}\n         *  Since AutoGravity is a Qualifier, it also comes with its own g_ key, which needs to be removed.\n         *  To solve it, we take only the value from the qualifier, instead of the whole thing\n         */\n        this.addValue(val.qualifierValue);\n        return this;\n    }\n}\nexport { FocusOnGravity };\n"],"mappings":";;;;AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AAJA,IAKMC,cAAc;EAAA;EAAA;EAChB,wBAAYC,cAAc,EAAE;IAAA;IACxB;IACA;IAAA,yBACMA,cAAc;EACxB;EACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,yBAAgBC,GAAG,EAAE;MACjB;AACR;AACA;AACA;AACA;AACA;MACQ,IAAI,CAACC,QAAQ,CAACD,GAAG,CAACE,cAAc,CAAC;MACjC,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAnBwBL,gBAAgB;AAqB7C,SAASC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}