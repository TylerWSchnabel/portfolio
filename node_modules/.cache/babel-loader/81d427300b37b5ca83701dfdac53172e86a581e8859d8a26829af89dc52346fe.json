{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { custom, faces } from \"../../../qualifiers/region.js\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar BlurAction = /*#__PURE__*/function (_Action) {\n  _inherits(BlurAction, _Action);\n  var _super = _createSuper(BlurAction);\n  function BlurAction(strength) {\n    var _this;\n    _classCallCheck(this, BlurAction);\n    _this = _super.call(this);\n    _this._actionModel = {};\n    _this._strength = strength;\n    _this._actionModel.actionType = 'blur';\n    _this._actionModel.strength = strength;\n    return _this;\n  }\n  /**\n   * @description Specifies the region to blur.\n   * @param {NamedRegion} blurRegion\n   */\n  _createClass(BlurAction, [{\n    key: \"region\",\n    value: function region(blurRegion) {\n      this._actionModel.region = {\n        RegionType: blurRegion.regionType\n      };\n      this._region = blurRegion;\n      return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n  }, {\n    key: \"strength\",\n    value: function strength(_strength) {\n      this._strength = _strength;\n      this._actionModel.strength = _strength;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var _this2 = this;\n      /*\n       * Blur with region is a unique object in this codebase.\n       * On top of Blur being an Action with Qualifiers,\n       * it also accepts a Qualifier called Region.\n       *\n       * This Qualifier is in itself composite of qualifiers (such as height, or width).\n       * The existence of Region changes the output of Blur in non traditional ways\n       * which forced this relatively ad-hoc implementation.\n       *\n       * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n       * This happens naturally in the Action class,\n       * however since we're dealing with two levels of qualifiers (Blur and Region),\n       * these need to be merged.\n       *\n       * This function will merge the Region qualifiers with Blur\n       * and add all needed implicit qualifiers (like g_ocr_text).\n       * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n       */\n      var str = this._strength ? \":\".concat(this._strength) : '';\n      if ('_region' in this) {\n        var qualifiers = this._region.qualifiers;\n        // Copy qualifiers from the region \"action\" to the blur action\n        qualifiers.forEach(function (q) {\n          return _this2.addQualifier(q);\n        });\n        if (this._region.regionType === 'named') {\n          this.addQualifier(new Qualifier('e', \"blur_region\".concat(str)));\n        }\n        if (this._region.regionType === 'ocr_text') {\n          this.addQualifier(new Qualifier('e', \"blur_region\".concat(str)));\n          this.addQualifier(new Qualifier('g', \"ocr_text\"));\n        }\n        if (this._region.regionType === 'faces') {\n          this.addQualifier(new Qualifier('e', \"blur_faces\".concat(str)));\n        }\n      } else {\n        this.addQualifier(new Qualifier('e', \"blur\".concat(str)));\n      }\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var actionType = actionModel.actionType,\n        strength = actionModel.strength,\n        region = actionModel.region;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this(strength);\n      strength && result.strength(strength);\n      if (region && region.RegionType === 'faces') {\n        result.region(faces());\n      }\n      if (region && region.RegionType === 'custom') {\n        result.region(custom());\n      }\n      return result;\n    }\n  }]);\n  return BlurAction;\n}(Action);\nexport { BlurAction };","map":{"version":3,"names":["Qualifier","Action","custom","faces","BlurAction","strength","_actionModel","_strength","actionType","blurRegion","region","RegionType","regionType","_region","str","qualifiers","forEach","q","addQualifier","actionModel","result"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/blur/Blur.js"],"sourcesContent":["import { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { Action } from \"../../../internal/Action.js\";\nimport { custom, faces } from \"../../../qualifiers/region.js\";\n/**\n * @description The Action class of the blur Builder.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass BlurAction extends Action {\n    constructor(strength) {\n        super();\n        this._actionModel = {};\n        this._strength = strength;\n        this._actionModel.actionType = 'blur';\n        this._actionModel.strength = strength;\n    }\n    /**\n     * @description Specifies the region to blur.\n     * @param {NamedRegion} blurRegion\n     */\n    region(blurRegion) {\n        this._actionModel.region = { RegionType: blurRegion.regionType };\n        this._region = blurRegion;\n        return this;\n    }\n    /**\n     * @description Sets the strength of the blur effect.\n     * @param {number | string} strength\n     */\n    strength(strength) {\n        this._strength = strength;\n        this._actionModel.strength = strength;\n        return this;\n    }\n    prepareQualifiers() {\n        /*\n         * Blur with region is a unique object in this codebase.\n         * On top of Blur being an Action with Qualifiers,\n         * it also accepts a Qualifier called Region.\n         *\n         * This Qualifier is in itself composite of qualifiers (such as height, or width).\n         * The existence of Region changes the output of Blur in non traditional ways\n         * which forced this relatively ad-hoc implementation.\n         *\n         * Aside from all of that, all of the Qualifiers in the component should be alphabetized\n         * This happens naturally in the Action class,\n         * however since we're dealing with two levels of qualifiers (Blur and Region),\n         * these need to be merged.\n         *\n         * This function will merge the Region qualifiers with Blur\n         * and add all needed implicit qualifiers (like g_ocr_text).\n         * We're not using the full Gravity Qualifier here to prevent the code import for such a simplistic case\n         */\n        const str = this._strength ? `:${this._strength}` : '';\n        if ('_region' in this) {\n            const qualifiers = this._region.qualifiers;\n            // Copy qualifiers from the region \"action\" to the blur action\n            qualifiers.forEach((q) => this.addQualifier(q));\n            if (this._region.regionType === 'named') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n            }\n            if (this._region.regionType === 'ocr_text') {\n                this.addQualifier(new Qualifier('e', `blur_region${str}`));\n                this.addQualifier(new Qualifier('g', `ocr_text`));\n            }\n            if (this._region.regionType === 'faces') {\n                this.addQualifier(new Qualifier('e', `blur_faces${str}`));\n            }\n        }\n        else {\n            this.addQualifier(new Qualifier('e', `blur${str}`));\n        }\n    }\n    static fromJson(actionModel) {\n        const { actionType, strength, region } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(strength);\n        strength && result.strength(strength);\n        if (region && region.RegionType === 'faces') {\n            result.region(faces());\n        }\n        if (region && region.RegionType === 'custom') {\n            result.region(custom());\n        }\n        return result;\n    }\n}\nexport { BlurAction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}