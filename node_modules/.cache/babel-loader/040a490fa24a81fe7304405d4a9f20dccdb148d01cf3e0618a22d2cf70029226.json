{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description - This Action, while belonging to Effect, acts as a modified overlay.\n *                The class implements the Builder pattern, where strength() and preserveColor()\n *                are applied to the instance, and toString() is responsible to combining them into the right result.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar StyleTransfer = /*#__PURE__*/function (_Action) {\n  _inherits(StyleTransfer, _Action);\n  var _super = _createSuper(StyleTransfer);\n  /**\n   * The Image Source used to create the style transfer,\n   * Use the Image Source builder to quickly create a source:\n   * </br>Import: {@link Qualifiers.Source|import Sources from '@cloudinary/url-gen/qualifiers/sources';}\n   * </br>Create: `Source.image('dog')`\n   * @param {ImageSource} imageSource\n   */\n  function StyleTransfer(imageSource) {\n    var _this;\n    _classCallCheck(this, StyleTransfer);\n    _this = _super.call(this);\n    _this.imageSource = imageSource;\n    return _this;\n  }\n  /**\n   * Determines the strength in which the styleTransfer is applied.\n   * @param {number} [effectStrength] - The strength level, 1-100, default: 100\n   * @return {this}\n   */\n  _createClass(StyleTransfer, [{\n    key: \"strength\",\n    value: function strength() {\n      var effectStrength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.effectStrength = effectStrength;\n      return this;\n    }\n    /**\n     * More aggressively preserves the colors of the the target photo,\n     * Can be used with `strength()` to enhance this behaviour\n     * @param {boolean} bool\n     * @return {this}\n     */\n  }, {\n    key: \"preserveColor\",\n    value: function preserveColor() {\n      var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.preserve = bool;\n      return this;\n    }\n    /**\n     * The `build` phase of the Action, used internally to concat all the options received into a single string.\n     * The result of this method is the toString() of the imageLayer provided in the constructor.\n     * @return {string}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var NAME = 'style_transfer';\n      var PRES = this.preserve ? 'preserve_color' : null;\n      var STRENGTH = this.effectStrength;\n      // Create the style effect\n      var styleEffect = new Qualifier('e', new QualifierValue([NAME, PRES, STRENGTH]));\n      // Handle the source for publicID,\n      var sourceOpenString = this.imageSource.getOpenSourceString('l');\n      // Handle source transformation\n      var imgTx = this.imageSource.getTransformation();\n      var sourceTransformation = imgTx ? imgTx.toString() : '';\n      return [sourceOpenString, sourceTransformation, \"\".concat(styleEffect, \",fl_layer_apply\")].filter(function (a) {\n        return a;\n      }).join('/');\n    }\n  }]);\n  return StyleTransfer;\n}(Action);\nexport { StyleTransfer };","map":{"version":3,"names":["QualifierValue","Action","Qualifier","StyleTransfer","imageSource","effectStrength","bool","preserve","NAME","PRES","STRENGTH","styleEffect","sourceOpenString","getOpenSourceString","imgTx","getTransformation","sourceTransformation","toString","filter","a","join"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/StyleTransfer.js"],"sourcesContent":["import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description - This Action, while belonging to Effect, acts as a modified overlay.\n *                The class implements the Builder pattern, where strength() and preserveColor()\n *                are applied to the instance, and toString() is responsible to combining them into the right result.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass StyleTransfer extends Action {\n    /**\n     * The Image Source used to create the style transfer,\n     * Use the Image Source builder to quickly create a source:\n     * </br>Import: {@link Qualifiers.Source|import Sources from '@cloudinary/url-gen/qualifiers/sources';}\n     * </br>Create: `Source.image('dog')`\n     * @param {ImageSource} imageSource\n     */\n    constructor(imageSource) {\n        super();\n        this.imageSource = imageSource;\n    }\n    /**\n     * Determines the strength in which the styleTransfer is applied.\n     * @param {number} [effectStrength] - The strength level, 1-100, default: 100\n     * @return {this}\n     */\n    strength(effectStrength = null) {\n        this.effectStrength = effectStrength;\n        return this;\n    }\n    /**\n     * More aggressively preserves the colors of the the target photo,\n     * Can be used with `strength()` to enhance this behaviour\n     * @param {boolean} bool\n     * @return {this}\n     */\n    preserveColor(bool = true) {\n        this.preserve = bool;\n        return this;\n    }\n    /**\n     * The `build` phase of the Action, used internally to concat all the options received into a single string.\n     * The result of this method is the toString() of the imageLayer provided in the constructor.\n     * @return {string}\n     */\n    toString() {\n        const NAME = 'style_transfer';\n        const PRES = this.preserve ? 'preserve_color' : null;\n        const STRENGTH = this.effectStrength;\n        // Create the style effect\n        const styleEffect = new Qualifier('e', new QualifierValue([NAME, PRES, STRENGTH]));\n        // Handle the source for publicID,\n        const sourceOpenString = this.imageSource.getOpenSourceString('l');\n        // Handle source transformation\n        const imgTx = this.imageSource.getTransformation();\n        const sourceTransformation = imgTx ? imgTx.toString() : '';\n        return [\n            sourceOpenString,\n            sourceTransformation,\n            `${styleEffect},fl_layer_apply`\n        ].filter((a) => a).join('/');\n    }\n}\nexport { StyleTransfer };\n"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,IAQMC,aAAa;EAAA;EAAA;EACf;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,uBAAYC,WAAW,EAAE;IAAA;IAAA;IACrB;IACA,MAAKA,WAAW,GAAGA,WAAW;IAAC;EACnC;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAgC;MAAA,IAAvBC,cAAc,uEAAG,IAAI;MAC1B,IAAI,CAACA,cAAc,GAAGA,cAAc;MACpC,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,yBAA2B;MAAA,IAAbC,IAAI,uEAAG,IAAI;MACrB,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,oBAAW;MACP,IAAME,IAAI,GAAG,gBAAgB;MAC7B,IAAMC,IAAI,GAAG,IAAI,CAACF,QAAQ,GAAG,gBAAgB,GAAG,IAAI;MACpD,IAAMG,QAAQ,GAAG,IAAI,CAACL,cAAc;MACpC;MACA,IAAMM,WAAW,GAAG,IAAIT,SAAS,CAAC,GAAG,EAAE,IAAIF,cAAc,CAAC,CAACQ,IAAI,EAAEC,IAAI,EAAEC,QAAQ,CAAC,CAAC,CAAC;MAClF;MACA,IAAME,gBAAgB,GAAG,IAAI,CAACR,WAAW,CAACS,mBAAmB,CAAC,GAAG,CAAC;MAClE;MACA,IAAMC,KAAK,GAAG,IAAI,CAACV,WAAW,CAACW,iBAAiB,EAAE;MAClD,IAAMC,oBAAoB,GAAGF,KAAK,GAAGA,KAAK,CAACG,QAAQ,EAAE,GAAG,EAAE;MAC1D,OAAO,CACHL,gBAAgB,EAChBI,oBAAoB,YACjBL,WAAW,qBACjB,CAACO,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC;MAAA,EAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAChC;EAAC;EAAA;AAAA,EApDuBnB,MAAM;AAsDlC,SAASE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}