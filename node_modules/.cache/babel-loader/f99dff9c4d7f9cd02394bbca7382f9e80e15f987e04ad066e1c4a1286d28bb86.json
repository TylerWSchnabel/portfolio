{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { QualifierModel } from \"../../internal/models/QualifierModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {QualifierModel}\n * @description An abstract class extended by all Source objects\n */\nvar BaseSource = /*#__PURE__*/function (_QualifierModel) {\n  _inherits(BaseSource, _QualifierModel);\n  var _super = _createSuper(BaseSource);\n  function BaseSource() {\n    _classCallCheck(this, BaseSource);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BaseSource, [{\n    key: \"encodeAssetPublicID\",\n    value:\n    /**\n     * @description Utility function to encode an asset publicID in an overlay\n     * @protected\n     * @example\n     * encodeAssetPublicID('foo/bar'); // -> foo:bar\n     */\n    function encodeAssetPublicID(publicID) {\n      return publicID.replace(/\\//g, ':');\n    }\n    /**\n     * @description\n     * Apply a transformation on the image source of the layer\n     * @param {SDK.ImageTransformation} t An image transformation to apply to the layer\n     * @returns {this}\n     */\n  }, {\n    key: \"transformation\",\n    value: function transformation(t) {\n      this._qualifierModel.transformation = t.toJson();\n      this._transformation = t;\n      return this;\n    }\n    /**\n     * @description Returns the Transformation of the source\n     * @return {SDK.Transformation}\n     */\n  }, {\n    key: \"getTransformation\",\n    value: function getTransformation() {\n      return this._transformation;\n    }\n  }]);\n  return BaseSource;\n}(QualifierModel);\nexport { BaseSource };","map":{"version":3,"names":["QualifierModel","BaseSource","publicID","replace","t","_qualifierModel","transformation","toJson","_transformation"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/source/BaseSource.js"],"sourcesContent":["import { QualifierModel } from \"../../internal/models/QualifierModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {QualifierModel}\n * @description An abstract class extended by all Source objects\n */\nclass BaseSource extends QualifierModel {\n    /**\n     * @description Utility function to encode an asset publicID in an overlay\n     * @protected\n     * @example\n     * encodeAssetPublicID('foo/bar'); // -> foo:bar\n     */\n    encodeAssetPublicID(publicID) {\n        return publicID.replace(/\\//g, ':');\n    }\n    /**\n     * @description\n     * Apply a transformation on the image source of the layer\n     * @param {SDK.ImageTransformation} t An image transformation to apply to the layer\n     * @returns {this}\n     */\n    transformation(t) {\n        this._qualifierModel.transformation = t.toJson();\n        this._transformation = t;\n        return this;\n    }\n    /**\n     * @description Returns the Transformation of the source\n     * @return {SDK.Transformation}\n     */\n    getTransformation() {\n        return this._transformation;\n    }\n}\nexport { BaseSource };\n"],"mappings":";;;;AAAA,SAASA,cAAc,QAAQ,yCAAyC;AACxE;AACA;AACA;AACA;AACA;AAJA,IAKMC,UAAU;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACZ;AACJ;AACA;AACA;AACA;AACA;IACI,6BAAoBC,QAAQ,EAAE;MAC1B,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IACvC;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,wBAAeC,CAAC,EAAE;MACd,IAAI,CAACC,eAAe,CAACC,cAAc,GAAGF,CAAC,CAACG,MAAM,EAAE;MAChD,IAAI,CAACC,eAAe,GAAGJ,CAAC;MACxB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,6BAAoB;MAChB,OAAO,IAAI,CAACI,eAAe;IAC/B;EAAC;EAAA;AAAA,EA3BoBR,cAAc;AA6BvC,SAASC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}