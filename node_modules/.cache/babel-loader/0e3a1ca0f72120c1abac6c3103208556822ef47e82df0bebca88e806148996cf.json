{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag.js\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\nvar ClipAction = /*#__PURE__*/function (_Action) {\n  _inherits(ClipAction, _Action);\n  var _super = _createSuper(ClipAction);\n  function ClipAction() {\n    var _this;\n    _classCallCheck(this, ClipAction);\n    _this = _super.call(this);\n    _this.isEvenOdd = false;\n    return _this;\n  }\n  /**\n   * @description The name of the path to clip by\n   * @param {string} path\n   * @return {this}\n   */\n  _createClass(ClipAction, [{\n    key: \"byName\",\n    value: function byName(path) {\n      this.path = path;\n      return this;\n    }\n    /**\n     * @description The index of the path to clip by\n     * @param {number} path\n     * @return {this}\n     */\n  }, {\n    key: \"byIndex\",\n    value: function byIndex(path) {\n      this.path = path;\n      return this;\n    }\n    /**\n     * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n     * @return {this}\n     */\n  }, {\n    key: \"evenOdd\",\n    value: function evenOdd() {\n      this.isEvenOdd = true;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      var qualifierValue;\n      if (typeof this.path === 'string') {\n        qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n      } else {\n        qualifierValue = new QualifierValue(this.path);\n      }\n      //handles flag\n      if (this.isEvenOdd) {\n        this.addFlag(clipEvenOdd());\n      } else {\n        this.addFlag(clip());\n      }\n      this.addQualifier(new Qualifier('pg', qualifierValue));\n      return this;\n    }\n  }]);\n  return ClipAction;\n}(Action);\nexport { ClipAction };","map":{"version":3,"names":["Action","Qualifier","QualifierValue","clip","clipEvenOdd","ClipAction","isEvenOdd","path","qualifierValue","setDelimiter","addFlag","addQualifier"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/psdTools/ClipAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { clip, clipEvenOdd } from \"../../qualifiers/flag.js\";\n/**\n * @description  Defines the clipping path to use when trimming pixels.\n * @extends SDK.Action\n * @memberOf Actions.PSDTools\n * @see Visit {@link Actions.PSDTools| PSDTools} for an example\n */\nclass ClipAction extends Action {\n    constructor() {\n        super();\n        this.isEvenOdd = false;\n    }\n    /**\n     * @description The name of the path to clip by\n     * @param {string} path\n     * @return {this}\n     */\n    byName(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description The index of the path to clip by\n     * @param {number} path\n     * @return {this}\n     */\n    byIndex(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * @description Trims pixels according to a clipping path included in the original image using an evenodd clipping rule.\n     * @return {this}\n     */\n    evenOdd() {\n        this.isEvenOdd = true;\n        return this;\n    }\n    prepareQualifiers() {\n        let qualifierValue;\n        if (typeof this.path === 'string') {\n            qualifierValue = new QualifierValue(['name', this.path]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(this.path);\n        }\n        //handles flag\n        if (this.isEvenOdd) {\n            this.addFlag(clipEvenOdd());\n        }\n        else {\n            this.addFlag(clip());\n        }\n        this.addQualifier(new Qualifier('pg', qualifierValue));\n        return this;\n    }\n}\nexport { ClipAction };\n"],"mappings":";;;;AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,IAAI,EAAEC,WAAW,QAAQ,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,UAAU;EAAA;EAAA;EACZ,sBAAc;IAAA;IAAA;IACV;IACA,MAAKC,SAAS,GAAG,KAAK;IAAC;EAC3B;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,gBAAOC,IAAI,EAAE;MACT,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,iBAAQA,IAAI,EAAE;MACV,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,mBAAU;MACN,IAAI,CAACD,SAAS,GAAG,IAAI;MACrB,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAIE,cAAc;MAClB,IAAI,OAAO,IAAI,CAACD,IAAI,KAAK,QAAQ,EAAE;QAC/BC,cAAc,GAAG,IAAIN,cAAc,CAAC,CAAC,MAAM,EAAE,IAAI,CAACK,IAAI,CAAC,CAAC,CAACE,YAAY,CAAC,GAAG,CAAC;MAC9E,CAAC,MACI;QACDD,cAAc,GAAG,IAAIN,cAAc,CAAC,IAAI,CAACK,IAAI,CAAC;MAClD;MACA;MACA,IAAI,IAAI,CAACD,SAAS,EAAE;QAChB,IAAI,CAACI,OAAO,CAACN,WAAW,EAAE,CAAC;MAC/B,CAAC,MACI;QACD,IAAI,CAACM,OAAO,CAACP,IAAI,EAAE,CAAC;MACxB;MACA,IAAI,CAACQ,YAAY,CAAC,IAAIV,SAAS,CAAC,IAAI,EAAEO,cAAc,CAAC,CAAC;MACtD,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAhDoBR,MAAM;AAkD/B,SAASK,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}