{"ast":null,"code":"import _classCallCheck from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nvar CartoonifyEffect = /*#__PURE__*/function (_Action) {\n  _inherits(CartoonifyEffect, _Action);\n  var _super = _createSuper(CartoonifyEffect);\n  function CartoonifyEffect(effectName, strength) {\n    var _this;\n    _classCallCheck(this, CartoonifyEffect);\n    // We don't pass level in the constructor, we'll build it in the prepareParam\n    _this = _super.call(this);\n    _this._actionModel = {};\n    _this.cartoonifyStrength = strength;\n    _this.effectName = effectName;\n    _this._actionModel.actionType = effectName;\n    return _this;\n  }\n  /**\n   * @description Sets the thickness of the lines.\n   * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n   * @return {this}\n   */\n  _createClass(CartoonifyEffect, [{\n    key: \"lineStrength\",\n    value: function lineStrength(_lineStrength) {\n      this.cartoonifyStrength = _lineStrength;\n      this._actionModel.lineStrength = _lineStrength;\n      return this;\n    }\n    /**\n     * @description Achieves a black and white cartoon effect.\n     * @return {this}\n     */\n  }, {\n    key: \"blackwhite\",\n    value: function blackwhite() {\n      this._actionModel.blackAndWhite = true;\n      this.colorReduction = 'bw';\n      return this;\n    }\n    /**\n     * @description\n     * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n     * Higher reduction values result in a less realistic look.\n     * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n     * @return {this}\n     */\n  }, {\n    key: \"colorReductionLevel\",\n    value: function colorReductionLevel(level) {\n      this._actionModel.colorReductionLevel = level;\n      this.colorReduction = level;\n      return this;\n    }\n  }, {\n    key: \"prepareQualifiers\",\n    value: function prepareQualifiers() {\n      this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n      return;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(actionModel) {\n      var actionType = actionModel.actionType,\n        lineStrength = actionModel.lineStrength,\n        blackAndWhite = actionModel.blackAndWhite,\n        colorReductionLevel = actionModel.colorReductionLevel;\n      // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n      // This allows the inheriting classes to determine the class to be created\n      var result = new this(actionType, lineStrength);\n      blackAndWhite && result.blackwhite();\n      colorReductionLevel && result.colorReductionLevel(colorReductionLevel);\n      lineStrength && result.lineStrength(lineStrength);\n      return result;\n    }\n  }]);\n  return CartoonifyEffect;\n}(Action);\nexport { CartoonifyEffect };","map":{"version":3,"names":["Qualifier","QualifierValue","Action","CartoonifyEffect","effectName","strength","_actionModel","cartoonifyStrength","actionType","lineStrength","blackAndWhite","colorReduction","level","colorReductionLevel","addQualifier","actionModel","result","blackwhite"],"sources":["/Users/tylerschnabel/Documents/the_odin_project/portfolio/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Cartoonify.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Applies a cartoon effect to an image.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass CartoonifyEffect extends Action {\n    constructor(effectName, strength) {\n        // We don't pass level in the constructor, we'll build it in the prepareParam\n        super();\n        this._actionModel = {};\n        this.cartoonifyStrength = strength;\n        this.effectName = effectName;\n        this._actionModel.actionType = effectName;\n    }\n    /**\n     * @description Sets the thickness of the lines.\n     * @param {number} lineStrength The thickness of the lines. (Range: 0 to 100, Server default: 50)\n     * @return {this}\n     */\n    lineStrength(lineStrength) {\n        this.cartoonifyStrength = lineStrength;\n        this._actionModel.lineStrength = lineStrength;\n        return this;\n    }\n    /**\n     * @description Achieves a black and white cartoon effect.\n     * @return {this}\n     */\n    blackwhite() {\n        this._actionModel.blackAndWhite = true;\n        this.colorReduction = 'bw';\n        return this;\n    }\n    /**\n     * @description\n     * Sets the decrease in the number of colors and corresponding saturation boost of the remaining colors. <br/>\n     * Higher reduction values result in a less realistic look.\n     * @param {number } level The decrease in the number of colors and corresponding saturation boost of the remaining colors. (Range: 0 to 100, Server default: automatically adjusts according to the line_strength value). Set to 'bw' for a black and white cartoon effect.\n     * @return {this}\n     */\n    colorReductionLevel(level) {\n        this._actionModel.colorReductionLevel = level;\n        this.colorReduction = level;\n        return this;\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue([this.effectName, this.cartoonifyStrength, this.colorReduction])));\n        return;\n    }\n    static fromJson(actionModel) {\n        const { actionType, lineStrength, blackAndWhite, colorReductionLevel } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(actionType, lineStrength);\n        blackAndWhite && result.blackwhite();\n        colorReductionLevel && result.colorReductionLevel(colorReductionLevel);\n        lineStrength && result.lineStrength(lineStrength);\n        return result;\n    }\n}\nexport { CartoonifyEffect };\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AALA,IAMMC,gBAAgB;EAAA;EAAA;EAClB,0BAAYC,UAAU,EAAEC,QAAQ,EAAE;IAAA;IAAA;IAC9B;IACA;IACA,MAAKC,YAAY,GAAG,CAAC,CAAC;IACtB,MAAKC,kBAAkB,GAAGF,QAAQ;IAClC,MAAKD,UAAU,GAAGA,UAAU;IAC5B,MAAKE,YAAY,CAACE,UAAU,GAAGJ,UAAU;IAAC;EAC9C;EACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,sBAAaK,aAAY,EAAE;MACvB,IAAI,CAACF,kBAAkB,GAAGE,aAAY;MACtC,IAAI,CAACH,YAAY,CAACG,YAAY,GAAGA,aAAY;MAC7C,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,sBAAa;MACT,IAAI,CAACH,YAAY,CAACI,aAAa,GAAG,IAAI;MACtC,IAAI,CAACC,cAAc,GAAG,IAAI;MAC1B,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EANI;IAAA;IAAA,OAOA,6BAAoBC,KAAK,EAAE;MACvB,IAAI,CAACN,YAAY,CAACO,mBAAmB,GAAGD,KAAK;MAC7C,IAAI,CAACD,cAAc,GAAGC,KAAK;MAC3B,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,6BAAoB;MAChB,IAAI,CAACE,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAE,IAAIC,cAAc,CAAC,CAAC,IAAI,CAACG,UAAU,EAAE,IAAI,CAACG,kBAAkB,EAAE,IAAI,CAACI,cAAc,CAAC,CAAC,CAAC,CAAC;MAC1H;IACJ;EAAC;IAAA;IAAA,OACD,kBAAgBI,WAAW,EAAE;MACzB,IAAQP,UAAU,GAAuDO,WAAW,CAA5EP,UAAU;QAAEC,YAAY,GAAyCM,WAAW,CAAhEN,YAAY;QAAEC,aAAa,GAA0BK,WAAW,CAAlDL,aAAa;QAAEG,mBAAmB,GAAKE,WAAW,CAAnCF,mBAAmB;MACpE;MACA;MACA,IAAMG,MAAM,GAAG,IAAI,IAAI,CAACR,UAAU,EAAEC,YAAY,CAAC;MACjDC,aAAa,IAAIM,MAAM,CAACC,UAAU,EAAE;MACpCJ,mBAAmB,IAAIG,MAAM,CAACH,mBAAmB,CAACA,mBAAmB,CAAC;MACtEJ,YAAY,IAAIO,MAAM,CAACP,YAAY,CAACA,YAAY,CAAC;MACjD,OAAOO,MAAM;IACjB;EAAC;EAAA;AAAA,EArD0Bd,MAAM;AAuDrC,SAASC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}